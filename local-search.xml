<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微信支付(V3)和退款</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98(V3)%E5%92%8C%E9%80%80%E6%AC%BE/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98(V3)%E5%92%8C%E9%80%80%E6%AC%BE/</url>
    
    <content type="html"><![CDATA[<h3 id="一、微信支付基础信息配置"><a href="#一、微信支付基础信息配置" class="headerlink" title="一、微信支付基础信息配置"></a>一、微信支付基础信息配置</h3><h4 id="1-1、备注说明"><a href="#1-1、备注说明" class="headerlink" title="1.1、备注说明"></a>1.1、备注说明</h4><p>所有配置均按照自己项目微信支付平台的配置填写，配置中的【 证书序列号】【证书私钥】路径根据自己实际情况配置。</p><h4 id="1-2、详细配置"><a href="#1-2、详细配置" class="headerlink" title="1.2、详细配置"></a>1.2、详细配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#微信小程序登录 配置</span><br><span class="hljs-attr">wx-mini:</span><br>  <span class="hljs-comment">#APP_ID</span><br>  <span class="hljs-attr">appId:</span> <span class="hljs-string">wxdc5b096e42b8dbc5</span><br>  <span class="hljs-comment">#appsecret</span><br>  <span class="hljs-attr">appsecret:</span> <span class="hljs-string">a4a5f62ee89e5542e71b22dce2f923d9</span><br>  <span class="hljs-comment">#微信支付配置</span><br>  <span class="hljs-comment">#微信支付商户号</span><br>  <span class="hljs-attr">mchId:</span> <span class="hljs-number">1533293411</span><br>  <span class="hljs-comment">#微信支付商户密钥</span><br>  <span class="hljs-attr">mchKey:</span> <span class="hljs-string">FBKJ20190425FBKJ20190425FBKJ2019</span><br>  <span class="hljs-comment">#证书序列号</span><br>  <span class="hljs-attr">serialNo:</span> <span class="hljs-string">119FF6F16CAD2227F3C88D15F241FA1A08F80A2B</span><br>  <span class="hljs-comment">#证书私钥</span><br>  <span class="hljs-attr">privateKey:</span> <span class="hljs-string">/home/wxPay/apiclient_key.pem</span><br>  <span class="hljs-comment">#调用接口提交的交易类型，取值如下：JSAPI，NATIVE，APP</span><br>  <span class="hljs-attr">tradeType:</span><br>    <span class="hljs-attr">jsapi:</span> <span class="hljs-string">JSAPI</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">APP</span><br>  <span class="hljs-comment">#签名方式</span><br>  <span class="hljs-attr">signType:</span> <span class="hljs-string">MD5</span><br></code></pre></td></tr></table></figure><h3 id="二、微信支付-V3-工具类-实体类"><a href="#二、微信支付-V3-工具类-实体类" class="headerlink" title="二、微信支付(V3)工具类&#x2F;实体类"></a>二、微信支付(V3)工具类&#x2F;实体类</h3><h4 id="2-1、-v3支付入参实体"><a href="#2-1、-v3支付入参实体" class="headerlink" title="2.1、 v3支付入参实体"></a>2.1、 v3支付入参实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WxPayDto</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商户id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String mchid;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 应用id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String appid;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商品描述</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String description;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商品订单号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String out_trade_no;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 交易结束时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String time_expire;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 回调地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String notify_url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     *订单金额信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> AmountDto amount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 订单支付信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> PayerDto payer;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 场景信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> SceneInfoDto sceneInfo;<br>&#125;<br><br><span class="hljs-comment">//场景实体</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SceneInfoDto</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * ip</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String payer_client_ip;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-2、v3支付返回实体"><a href="#2-2、v3支付返回实体" class="headerlink" title="2.2、v3支付返回实体"></a>2.2、v3支付返回实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 微信支付返回参数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PayNotifyVO</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知的唯一ID</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String create_time;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知类型 支付成功通知的类型为TRANSACTION.SUCCESS</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String event_type;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知数据类型 支付成功通知为encrypt-resource</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String resource_type;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知资源数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Resource resource;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 回调摘要</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String summary;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通知资源数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Resource</span>&#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 加密算法类型</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String algorithm;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 数据密文</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String ciphertext;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 附加数据</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String associated_data;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 随机串</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String nonce;<br><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getAlgorithm</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> algorithm;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAlgorithm</span><span class="hljs-params">(String algorithm)</span> &#123;<br>            <span class="hljs-built_in">this</span>.algorithm = algorithm;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCiphertext</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> ciphertext;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCiphertext</span><span class="hljs-params">(String ciphertext)</span> &#123;<br>            <span class="hljs-built_in">this</span>.ciphertext = ciphertext;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getAssociated_data</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> associated_data;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAssociated_data</span><span class="hljs-params">(String associated_data)</span> &#123;<br>            <span class="hljs-built_in">this</span>.associated_data = associated_data;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getNonce</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> nonce;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setNonce</span><span class="hljs-params">(String nonce)</span> &#123;<br>            <span class="hljs-built_in">this</span>.nonce = nonce;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-3、v3支付回调返回实体"><a href="#2-3、v3支付回调返回实体" class="headerlink" title="2.3、v3支付回调返回实体"></a>2.3、v3支付回调返回实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 回调完成返回</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PayVo</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否成功</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String code;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String message;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-4、微信退款实体"><a href="#2-4、微信退款实体" class="headerlink" title="2.4、微信退款实体"></a>2.4、微信退款实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 微信退款入参</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WeChatRefundParam</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 微信支付订单号，微信支付订单号和商家订单号二选一</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String transaction_id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商家订单号，对应 out_trade_no，</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String out_trade_no;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商户退款单号，对应out_refund_no</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String out_refund_no;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 退款原因，选填</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String reason;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 回调地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String notify_url;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 退款金额</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> BigDecimal refundMoney;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 原订单金额，必填</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> BigDecimal totalMoney;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="2-5、微信支付请求实体"><a href="#2-5、微信支付请求实体" class="headerlink" title="2.5、微信支付请求实体"></a>2.5、微信支付请求实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WxPayRequest</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String orderId;<br>    <span class="hljs-keyword">private</span> String totalPrice;<br>    <span class="hljs-keyword">private</span> String openId;<br>    <span class="hljs-keyword">private</span> HttpServletRequest request;<br>    <span class="hljs-keyword">private</span> Date date;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String url;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-6、v3支付验签实体"><a href="#2-6、v3支付验签实体" class="headerlink" title="2.6、v3支付验签实体"></a>2.6、v3支付验签实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WxPaySign</span> &#123;<br>    <span class="hljs-meta">@Schema(name = &quot;timeStamp&quot;, description = &quot;时间戳&quot;)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> timeStamp;<br>    <span class="hljs-meta">@Schema(name = &quot;nonceStr&quot;, description = &quot;随机字符串&quot;)</span><br>    <span class="hljs-keyword">private</span> String nonceStr;<br>    <span class="hljs-meta">@Schema(name = &quot;prepayId&quot;, description = &quot;订单详情扩展字符串&quot;)</span><br>    <span class="hljs-keyword">private</span> String prepayId;<br>    <span class="hljs-meta">@Schema(name = &quot;signType&quot;, description = &quot;签名方式&quot;)</span><br>    <span class="hljs-keyword">private</span> String signType;<br>    <span class="hljs-meta">@Schema(name = &quot;paySign&quot;, description = &quot;签名&quot;)</span><br>    <span class="hljs-keyword">private</span> String paySign;<br>    <span class="hljs-meta">@Schema(name=&quot;appId&quot;, description = &quot;appId&quot;)</span><br>    <span class="hljs-keyword">private</span> String appId;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-7、v3支付金额-类型实体"><a href="#2-7、v3支付金额-类型实体" class="headerlink" title="2.7、v3支付金额&#x2F;类型实体"></a>2.7、v3支付金额&#x2F;类型实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AmountDto</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 总金额</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer total;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 货币类型</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String currency;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-8、v3用户标识实体"><a href="#2-8、v3用户标识实体" class="headerlink" title="2.8、v3用户标识实体"></a>2.8、v3用户标识实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PayerDto</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户标识</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String openid;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-9、验签工具类"><a href="#2-9、验签工具类" class="headerlink" title="2.9、验签工具类"></a>2.9、验签工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RsaKitUtil</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加密算法RSA</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">KEY_ALGORITHM</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;RSA&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 私钥签名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data       需要加密的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> privateKey 私钥</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 加密后的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception 异常信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">encryptByPrivateKey</span><span class="hljs-params">(String data, PrivateKey privateKey)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Signature</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> Signature.getInstance(<span class="hljs-string">&quot;SHA256withRSA&quot;</span>);<br>        signature.initSign(privateKey);<br>        signature.update(data.getBytes(StandardCharsets.UTF_8));<br>        <span class="hljs-type">byte</span>[] signed = signature.sign();<br>        <span class="hljs-keyword">return</span> StrUtil.str(Base64.encode(signed));<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 从字符串中加载私钥&lt;br&gt;</span><br><span class="hljs-comment">     * 加载时使用的是PKCS8EncodedKeySpec（PKCS#8编码的Key指令）。</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> privateKeyStr 私钥</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@link</span> PrivateKey&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception 异常信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PrivateKey <span class="hljs-title function_">loadPrivateKey</span><span class="hljs-params">(String privateKeyStr)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">byte</span>[] buffer = Base64.decode(privateKeyStr);<br>            <span class="hljs-type">PKCS8EncodedKeySpec</span> <span class="hljs-variable">keySpec</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PKCS8EncodedKeySpec</span>(buffer);<br>            <span class="hljs-type">KeyFactory</span> <span class="hljs-variable">keyFactory</span> <span class="hljs-operator">=</span> KeyFactory.getInstance(KEY_ALGORITHM);<br>            <span class="hljs-keyword">return</span> keyFactory.generatePrivate(keySpec);<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(<span class="hljs-string">&quot;无此算法&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (InvalidKeySpecException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(<span class="hljs-string">&quot;私钥非法&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (NullPointerException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(<span class="hljs-string">&quot;私钥数据为空&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 公钥验证签名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data      需要加密的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sign      签名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> publicKey 公钥</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 验证结果</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception 异常信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">checkByPublicKey</span><span class="hljs-params">(String data, String sign, PublicKey publicKey)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Signature</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> Signature.getInstance(<span class="hljs-string">&quot;SHA256withRSA&quot;</span>);<br>        signature.initVerify(publicKey);<br>        signature.update(data.getBytes(StandardCharsets.UTF_8));<br>        <span class="hljs-keyword">return</span> signature.verify(Base64.decode(sign.getBytes(StandardCharsets.UTF_8)));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PublicKey <span class="hljs-title function_">loadPublicKey</span><span class="hljs-params">(String certificate)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">X509Certificate</span> <span class="hljs-variable">wechatPayCert</span> <span class="hljs-operator">=</span> PemUtil.loadCertificate(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(certificate.getBytes(StandardCharsets.UTF_8)));<br>        <span class="hljs-keyword">return</span> wechatPayCert.getPublicKey();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 微信平台公钥签名</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data       需要加密的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> publicKey 公钥</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 加密后的数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception 异常信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">encryptByPublicKey</span><span class="hljs-params">(String data, PublicKey publicKey)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Cipher</span> <span class="hljs-variable">cipher</span> <span class="hljs-operator">=</span> Cipher.getInstance(<span class="hljs-string">&quot;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&quot;</span>);<br>        cipher.init(Cipher.ENCRYPT_MODE, publicKey);<br>        <span class="hljs-type">byte</span>[] dataBytes = data.getBytes(<span class="hljs-string">&quot;utf-8&quot;</span>);<br>        <span class="hljs-type">byte</span>[] cipherdata = cipher.doFinal(dataBytes);<br>        <span class="hljs-keyword">return</span> Base64.encode(cipherdata);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="2-10、v3密钥-解密响应体工具"><a href="#2-10、v3密钥-解密响应体工具" class="headerlink" title="2.10、v3密钥 解密响应体工具"></a>2.10、v3密钥 解密响应体工具</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PayResponseUtils</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用微信V3密钥解密响应体.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> associatedData  response.body.data[i].encrypt_certificate.associated_data</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> nonce          response.body.data[i].encrypt_certificate.nonce</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ciphertext     response.body.data[i].encrypt_certificate.ciphertext</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the string</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> GeneralSecurityException the general security exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">decryptResponseBody</span><span class="hljs-params">(String associatedData, String nonce, String ciphertext,String wechatV3Key)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Cipher</span> <span class="hljs-variable">cipher</span> <span class="hljs-operator">=</span> Cipher.getInstance(<span class="hljs-string">&quot;AES/GCM/NoPadding&quot;</span>);<br><br>            <span class="hljs-type">SecretKeySpec</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SecretKeySpec</span>(wechatV3Key.getBytes(StandardCharsets.UTF_8), <span class="hljs-string">&quot;AES&quot;</span>);<br>            <span class="hljs-type">GCMParameterSpec</span> <span class="hljs-variable">spec</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GCMParameterSpec</span>(<span class="hljs-number">128</span>, nonce.getBytes(StandardCharsets.UTF_8));<br><br>            cipher.init(Cipher.DECRYPT_MODE, key, spec);<br>            cipher.updateAAD(associatedData.getBytes(StandardCharsets.UTF_8));<br><br>            <span class="hljs-type">byte</span>[] bytes;<br>            <span class="hljs-keyword">try</span> &#123;<br>                bytes = cipher.doFinal(Base64Utils.decodeFromString(ciphertext));<br>            &#125; <span class="hljs-keyword">catch</span> (GeneralSecurityException e) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(e);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(bytes, StandardCharsets.UTF_8);<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException | NoSuchPaddingException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalStateException</span>(e);<br>        &#125; <span class="hljs-keyword">catch</span> (InvalidKeyException | InvalidAlgorithmParameterException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(e);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="三、加载读取配置-实现层"><a href="#三、加载读取配置-实现层" class="headerlink" title="三、加载读取配置(实现层)"></a>三、加载读取配置(实现层)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Value(&quot;$&#123;wx-mini.appId&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String miniAppId;<br><span class="hljs-meta">@Value(&quot;$&#123;wx-mini.mchId&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String miniMchId;<br><span class="hljs-meta">@Value(&quot;$&#123;wx-mini.mchKey&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String mchKey;<br><span class="hljs-meta">@Value(&quot;$&#123;wx-mini.serialNo&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String serialNo;<br><span class="hljs-meta">@Value(&quot;$&#123;wx-mini.privateKey&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String privateKey;<br></code></pre></td></tr></table></figure><h3 id="四、微信预支付实现案例演示"><a href="#四、微信预支付实现案例演示" class="headerlink" title="四、微信预支付实现案例演示"></a>四、微信预支付实现案例演示</h3><h4 id="4-1、预支付逻辑实现"><a href="#4-1、预支付逻辑实现" class="headerlink" title="4.1、预支付逻辑实现"></a>4.1、预支付逻辑实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> R <span class="hljs-title function_">getPayId</span><span class="hljs-params">(String openId, String reservationId)</span> &#123;<br>       <span class="hljs-comment">//查询订单是否已创建 根据项目实际更改查询逻辑</span><br>       List&lt;OrderInfo&gt; orderInfos = baseMapper.selectList(Wrappers.&lt;OrderInfo&gt;lambdaQuery().eq(OrderInfo::getReservationId, reservationId));<br>       <span class="hljs-keyword">if</span>(CollectionUtils.isNotEmpty(orderInfos))&#123;<br>           <span class="hljs-keyword">return</span> R.fail(<span class="hljs-string">&quot;已创建订单请勿重复创建&quot;</span>);<br>       &#125;<br>       <span class="hljs-type">R</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> countAmount(reservationId);<br>       <span class="hljs-type">int</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> r.getCode();<br>       <span class="hljs-keyword">if</span> (code == <span class="hljs-number">500</span>) &#123;<br>           <span class="hljs-keyword">return</span> r;<br>       &#125;<br>       <span class="hljs-type">WxPayRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WxPayRequest</span>();<br>       <span class="hljs-comment">//订单实体 根据项目实际更改</span><br>       <span class="hljs-type">OrderInfo</span> <span class="hljs-variable">orderInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OrderInfo</span>();<br>       request.setOpenId(openId);<br>       request.setDate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>       <span class="hljs-comment">//支付回调地址 根据项目【完整接口】自行配置</span><br>       request.setUrl(<span class="hljs-string">&quot;https://xxx/jjyy-admin/jjyyOrderInfo/callPay&quot;</span>);<br>       <span class="hljs-comment">//订单号id</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">idStr</span> <span class="hljs-operator">=</span> IdGenerator.getIdStr();<br>       request.setOrderId(idStr);<br>       request.setTotalPrice(r.getData().toString());<br>       System.out.println(r.getData().toString() + <span class="hljs-string">&quot;-----------------------&quot;</span>);<br>       <span class="hljs-comment">//订单名称自定义</span><br>       request.setName(<span class="hljs-string">&quot;xxxxxxxxxxxxx&quot;</span>);<br>       <span class="hljs-comment">//生成订单</span><br>       orderInfo.setOrderId(idStr);<br>       <span class="hljs-type">LoginUser</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> LoginHelper.getLoginUser();<br>       orderInfo.setPayUserWxId(loginUser.getUserId().toString());<br>       orderInfo.setReservationId(reservationId);<br>       orderInfo.setIsSuccess(NumberUtils.INTEGER_ZERO);<br>       orderInfo.setCreatTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>       orderInfo.setPayAmount(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BigDecimal</span>(r.getData().toString()));<br>       <span class="hljs-comment">//添加订单  根据项目实际情况更改</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> orderInfoMapper.insert(orderInfo);<br>       <span class="hljs-keyword">if</span> (insert &lt;= <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-keyword">return</span> R.fail(<span class="hljs-string">&quot;创建后台订单失败&quot;</span>);<br>       &#125;<br>       <span class="hljs-type">WxPaySign</span> <span class="hljs-variable">beforeOrder</span> <span class="hljs-operator">=</span> createBeforeOrder(request, orderInfo);<br>       <span class="hljs-keyword">return</span> R.ok(beforeOrder);<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="4-2、构建微信支付"><a href="#4-2、构建微信支付" class="headerlink" title="4.2、构建微信支付"></a>4.2、构建微信支付</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> WxPaySign <span class="hljs-title function_">createBeforeOrder</span><span class="hljs-params">(WxPayRequest request, OrderInfo orderInfo)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">WxPayDto</span> <span class="hljs-variable">wxPayDto</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WxPayDto</span>();<br>            wxPayDto.setNotify_url(request.getUrl());<br>            wxPayDto.setDescription(request.getName());<br>            wxPayDto.setMchid(miniMchId);<br>            wxPayDto.setAppid(miniAppId);<br>            <span class="hljs-type">DateTime</span> <span class="hljs-variable">expireDate</span> <span class="hljs-operator">=</span> DateUtil.offsetSecond(request.getDate(), <span class="hljs-number">3600</span>);<br>            <span class="hljs-comment">// 交易结束时间</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">expireTime</span> <span class="hljs-operator">=</span> DateUtil.format(expireDate, <span class="hljs-string">&quot;yyyy-MM-dd&#x27;T&#x27;HH:mm:ssXXX&quot;</span>);<br>            wxPayDto.setTime_expire(expireTime);<br>            wxPayDto.setOut_trade_no(request.getOrderId());<br>            <span class="hljs-type">AmountDto</span> <span class="hljs-variable">build</span> <span class="hljs-operator">=</span> AmountDto.builder().total(WxPayUnifiedOrderRequest.yuanToFen(request.getTotalPrice())).build();<br>            wxPayDto.setAmount(build);<br>            <span class="hljs-type">PayerDto</span> <span class="hljs-variable">payerDto</span> <span class="hljs-operator">=</span> PayerDto.builder().openid(request.getOpenId()).build();<br>            wxPayDto.setPayer(payerDto);<br>            <span class="hljs-type">Map</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> JSONObject.parseObject(JSONObject.toJSONString(wxPayDto), Map.class);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">json</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(map);<br>            <span class="hljs-type">long</span> <span class="hljs-variable">epochSecond</span> <span class="hljs-operator">=</span> Instant.now().plusMillis(TimeUnit.HOURS.toMillis(<span class="hljs-number">0</span>)).getEpochSecond();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> IdUtils.simpleUUID();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;POST\n&quot;</span><br>                + <span class="hljs-string">&quot;/v3/pay/transactions/jsapi\n&quot;</span><br>                + epochSecond + <span class="hljs-string">&quot;\n&quot;</span><br>                + uuid + <span class="hljs-string">&quot;\n&quot;</span><br>                + json + <span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">sign2</span> <span class="hljs-operator">=</span> PayKitUtil.createSign(s2, privateKey);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi&quot;</span>;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">authorization</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;mchid=\&quot;&quot;</span> + miniMchId + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                + <span class="hljs-string">&quot;nonce_str=\&quot;&quot;</span> + uuid + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                + <span class="hljs-string">&quot;timestamp=\&quot;&quot;</span> + epochSecond + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                + <span class="hljs-string">&quot;serial_no=\&quot;&quot;</span> + serialNo + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                + <span class="hljs-string">&quot;signature=\&quot;&quot;</span> + sign2 + <span class="hljs-string">&quot;\&quot;&quot;</span>;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> HttpRequest.post(url).header(<span class="hljs-string">&quot;Authorization&quot;</span>, <span class="hljs-string">&quot;WECHATPAY2-SHA256-RSA2048 &quot;</span> + authorization).body(json).execute().body();<br>            System.out.println(result + <span class="hljs-string">&quot;------------------&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">prepay_id</span> <span class="hljs-operator">=</span> JSONObject.parseObject(result).get(<span class="hljs-string">&quot;prepay_id&quot;</span>).toString();<br>            System.out.println(prepay_id + <span class="hljs-string">&quot;-----------------------&quot;</span>);<br>            <span class="hljs-comment">//组装sign</span><br>            <span class="hljs-type">WxPaySign</span> <span class="hljs-variable">wxPay</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WxPaySign</span>();<br>            wxPay.setTimeStamp(epochSecond);<br>            wxPay.setNonceStr(uuid);<br>            wxPay.setPrepayId(<span class="hljs-string">&quot;prepay_id=&quot;</span> + prepay_id);<br>            wxPay.setSignType(<span class="hljs-string">&quot;RSA&quot;</span>);<br>            wxPay.setAppId(miniAppId);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> miniAppId + <span class="hljs-string">&quot;\n&quot;</span><br>                + epochSecond + <span class="hljs-string">&quot;\n&quot;</span><br>                + uuid + <span class="hljs-string">&quot;\n&quot;</span><br>                + <span class="hljs-string">&quot;prepay_id=&quot;</span> + prepay_id + <span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">sign</span> <span class="hljs-operator">=</span> PayKitUtil.createSign(s, privateKey);<br>            wxPay.setPaySign(sign);<br>            orderInfo.setOrderNo(request.getOrderId());<br>            orderInfo.setPrepayId(prepay_id);<br>            orderInfo.setTimeStamp(epochSecond);<br>            orderInfo.setNonceStr(uuid);<br>            orderInfo.setOrderCloseTime(TimeUtil.StringToDate(expireDate.toString()));<br>            orderInfoMapper.updateById(orderInfo);<br>            <span class="hljs-keyword">return</span> wxPay;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br><br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="五、微信支付回调实现案例演示"><a href="#五、微信支付回调实现案例演示" class="headerlink" title="五、微信支付回调实现案例演示"></a>五、微信支付回调实现案例演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> PayVo <span class="hljs-title function_">payUrl</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>       <span class="hljs-type">PayVo</span> <span class="hljs-variable">payVo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PayVo</span>();<br>       <span class="hljs-comment">//微信返回的请求体</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-keyword">try</span> &#123;<br>           body = getRequestBody(request);<br>           <span class="hljs-comment">//随机串</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">nonceStr</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Nonce&quot;</span>);<br><br>           <span class="hljs-comment">//微信传递过来的签名</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Signature&quot;</span>);<br>           <span class="hljs-comment">//时间戳</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">timestamp</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Timestamp&quot;</span>);<br>           <span class="hljs-comment">//应答报文主体\n</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> timestamp + <span class="hljs-string">&quot;\n&quot;</span><br>               + nonceStr + <span class="hljs-string">&quot;\n&quot;</span><br>               + body + <span class="hljs-string">&quot;\n&quot;</span>;<br>           <span class="hljs-comment">//验签</span><br>           <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> RsaKitUtil.checkByPublicKey(s2, signature, CertificateUtil.aesCertificate(miniMchId, serialNo, mchKey, privateKey).getPublicKey());<br>           System.out.println(b);<br>           <span class="hljs-keyword">if</span> (b) &#123;<br>               <span class="hljs-comment">//订单实体 根据项目实体情况更改</span><br>               <span class="hljs-type">OrderInfo</span> <span class="hljs-variable">orderInfo</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>               <span class="hljs-type">PayNotifyVO</span> <span class="hljs-variable">payNotifyVO</span> <span class="hljs-operator">=</span> JSONObject.parseObject(body, PayNotifyVO.class);<br>               <span class="hljs-comment">//如果支付成功</span><br>               <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;TRANSACTION.SUCCESS&quot;</span>.equals(payNotifyVO.getEvent_type())) &#123;<br>                   PayNotifyVO.<span class="hljs-type">Resource</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> payNotifyVO.getResource();<br>                   <span class="hljs-comment">//解密后资源数据</span><br>                   <span class="hljs-type">String</span> <span class="hljs-variable">notifyResourceStr</span> <span class="hljs-operator">=</span> PayResponseUtils.decryptResponseBody(resource.getAssociated_data(), resource.getNonce(), resource.getCiphertext(), mchKey);<br>                   <span class="hljs-comment">//通知资源数据对象</span><br>                   <span class="hljs-type">String</span> <span class="hljs-variable">getOut_trade_no</span> <span class="hljs-operator">=</span> JSONObject.parseObject(notifyResourceStr).get(<span class="hljs-string">&quot;out_trade_no&quot;</span>).toString();<br>                   <span class="hljs-type">String</span> <span class="hljs-variable">transaction_id</span> <span class="hljs-operator">=</span> JSONObject.parseObject(notifyResourceStr).get(<span class="hljs-string">&quot;transaction_id&quot;</span>).toString();<br>                   <span class="hljs-comment">//通过订单id修改订单号  根据项目实际情况编写</span><br>                   orderInfo = orderInfoMapper.selectOne(Wrappers.&lt;OrderInfo&gt;lambdaQuery().eq(OrderInfo::getOrderNo, getOut_trade_no));<br>                   orderInfo.setPayTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>                   <span class="hljs-keyword">if</span> (ObjectUtil.isNotNull(orderInfo)) &#123;<br>                       orderInfo.setWxOrderNo(transaction_id);<br>                       orderInfo.setIsSuccess(NumberUtils.INTEGER_ONE);<br>                       <span class="hljs-comment">//修改订单信息</span><br>                       orderInfoMapper.updateById(orderInfo);<br>                   &#125;<br>                   payVo.setCode(<span class="hljs-string">&quot;SUCCESS&quot;</span>);<br>                   payVo.setMessage(<span class="hljs-string">&quot;回调成功&quot;</span>);<br>               &#125;<br>  <span class="hljs-comment">//回调逻辑 根据项目自行编写</span><br>               <br>               <br>               <br>               <span class="hljs-keyword">return</span> payVo;<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               payVo.setCode(<span class="hljs-string">&quot;FAIL&quot;</span>);<br>               payVo.setMessage(<span class="hljs-string">&quot;验签失败&quot;</span>);<br>           &#125;<br>       &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>           e.printStackTrace();<br>           log.error(<span class="hljs-string">&quot;微信支付回调失败&quot;</span>);<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           e.printStackTrace();<br>       &#125;<br>       <span class="hljs-keyword">return</span> payVo;<br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="六、微信预退款实现案例演示"><a href="#六、微信预退款实现案例演示" class="headerlink" title="六、微信预退款实现案例演示"></a>六、微信预退款实现案例演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> R <span class="hljs-title function_">wxRefund</span><span class="hljs-params">(String orderId, String reason)</span> &#123;<br>       log.info(<span class="hljs-string">&quot;微信退款订单&quot;</span>);<br>       <span class="hljs-type">WeChatRefundParam</span> <span class="hljs-variable">weChatRefundParam</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeChatRefundParam</span>();<br>       <span class="hljs-comment">//通过主键查询订单信息  根据项目实际更改查询逻辑</span><br>       <span class="hljs-type">OrderInfo</span> <span class="hljs-variable">orderInfo</span> <span class="hljs-operator">=</span> orderInfoMapper.selectById(orderId);<br>       <span class="hljs-keyword">if</span> (ObjectUtils.isEmpty(orderInfo)) &#123;<br>           <span class="hljs-keyword">return</span> R.failed(<span class="hljs-string">&quot;订单号异常&quot;</span>);<br>       &#125;<br>       <span class="hljs-type">JSONObject</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>();<br>       <span class="hljs-comment">//订单交易号</span><br>       order.put(<span class="hljs-string">&quot;transaction_id&quot;</span>, orderInfo.getWxOrderNo());<br>       <span class="hljs-comment">//商户订单号</span><br>       order.put(<span class="hljs-string">&quot;out_trade_no&quot;</span>, orderInfo.getOrderNo());<br>       <span class="hljs-comment">//商户退款单号</span><br>       order.put(<span class="hljs-string">&quot;out_refund_no&quot;</span>, orderInfo.getOrderNo());<br>       <span class="hljs-comment">//退款原因</span><br>       order.put(<span class="hljs-string">&quot;reason&quot;</span>, reason);<br>       <span class="hljs-comment">//退款回调地址  根据项目【完整接口】自行配置</span><br>       order.put(<span class="hljs-string">&quot;notify_url&quot;</span>, <span class="hljs-string">&quot;https://xxx/jjyy-admin/jjyyOrderInfo/callReturnPay&quot;</span>);<br>       <span class="hljs-type">JSONObject</span> <span class="hljs-variable">amount</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>();<br>       <span class="hljs-comment">//退款金额</span><br>       amount.put(<span class="hljs-string">&quot;refund&quot;</span>, WxPayUnifiedOrderRequest.yuanToFen(orderInfo.getPayAmount().toString()));<br>       amount.put(<span class="hljs-string">&quot;currency&quot;</span>, <span class="hljs-string">&quot;CNY&quot;</span>);<br>       <span class="hljs-comment">//原订单金额</span><br>       amount.put(<span class="hljs-string">&quot;total&quot;</span>, WxPayUnifiedOrderRequest.yuanToFen(orderInfo.getPayAmount().toString()));<br>       order.put(<span class="hljs-string">&quot;amount&quot;</span>, amount);<br><br>       <span class="hljs-type">Map</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> JSONObject.parseObject(JSONObject.toJSONString(order), Map.class);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">json</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(map);<br>       <span class="hljs-type">long</span> <span class="hljs-variable">epochSecond</span> <span class="hljs-operator">=</span> Instant.now().plusMillis(TimeUnit.HOURS.toMillis(<span class="hljs-number">0</span>)).getEpochSecond();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> IdUtils.simpleUUID();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;POST\n&quot;</span><br>               + <span class="hljs-string">&quot;/v3/refund/domestic/refunds\n&quot;</span><br>               + epochSecond + <span class="hljs-string">&quot;\n&quot;</span><br>               + uuid + <span class="hljs-string">&quot;\n&quot;</span><br>               + json + <span class="hljs-string">&quot;\n&quot;</span>;<br>       <span class="hljs-keyword">try</span> &#123;<br>           <span class="hljs-type">String</span> <span class="hljs-variable">sign2</span> <span class="hljs-operator">=</span> PayKitUtil.createSign(s2, privateKey);<br>           <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://api.mch.weixin.qq.com/v3/refund/domestic/refunds&quot;</span>;<br><br>           <span class="hljs-type">String</span> <span class="hljs-variable">authorization</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;mchid=\&quot;&quot;</span> + miniMchId + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                   + <span class="hljs-string">&quot;nonce_str=\&quot;&quot;</span> + uuid + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                   + <span class="hljs-string">&quot;timestamp=\&quot;&quot;</span> + epochSecond + <span class="hljs-string">&quot;\&quot;,&quot;</span><br>                   + <span class="hljs-string">&quot;serial_no=\&quot;&quot;</span>+serialNo+<span class="hljs-string">&quot;\&quot;,&quot;</span><br>                   + <span class="hljs-string">&quot;signature=\&quot;&quot;</span> + sign2 + <span class="hljs-string">&quot;\&quot;&quot;</span>;<br>           <span class="hljs-type">String</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> HttpRequest.post(url).header(<span class="hljs-string">&quot;Authorization&quot;</span>, <span class="hljs-string">&quot;WECHATPAY2-SHA256-RSA2048 &quot;</span> + authorization).body(json).execute().body();<br>           <span class="hljs-type">String</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> JSONObject.parseObject(body).get(<span class="hljs-string">&quot;status&quot;</span>).toString();<br>           System.out.println(status);<br>           <span class="hljs-keyword">if</span> (status.equals(<span class="hljs-string">&quot;SUCCESS&quot;</span>)) &#123;<br>               <span class="hljs-keyword">return</span> R.ok(<span class="hljs-string">&quot;退款成功&quot;</span>);<br>           &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status.equals(<span class="hljs-string">&quot;CLOSED&quot;</span>)) &#123;<br>               <span class="hljs-keyword">return</span> R.ok(<span class="hljs-string">&quot;退款关闭&quot;</span>);<br>           &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status.equals(<span class="hljs-string">&quot;PROCESSING&quot;</span>)) &#123;<br>               <span class="hljs-keyword">return</span> R.ok(<span class="hljs-string">&quot;退款处理中&quot;</span>);<br>           &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status.equals(<span class="hljs-string">&quot;ABNORMAL&quot;</span>)) &#123;<br>               <span class="hljs-keyword">return</span> R.ok(<span class="hljs-string">&quot;退款异常&quot;</span>);<br>           &#125;<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           e.printStackTrace();<br>       &#125;<br>       <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>   &#125;<br><br></code></pre></td></tr></table></figure><h3 id="七、微信退款回调实现案例演示"><a href="#七、微信退款回调实现案例演示" class="headerlink" title="七、微信退款回调实现案例演示"></a>七、微信退款回调实现案例演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> PayVo <span class="hljs-title function_">wxRefundUrl</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>       log.info(<span class="hljs-string">&quot;回调退款成功---------------------------------------------------------------------&quot;</span>);<br>       <span class="hljs-type">PayVo</span> <span class="hljs-variable">payVo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PayVo</span>();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-keyword">try</span> &#123;<br>           body = getRequestBody(request);<br>           <span class="hljs-comment">//随机串</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">nonceStr</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Nonce&quot;</span>);<br><br>           <span class="hljs-comment">//微信传递过来的签名</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">signature</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Signature&quot;</span>);<br>           <span class="hljs-comment">//时间戳</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">timestamp</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;Wechatpay-Timestamp&quot;</span>);<br>           <span class="hljs-comment">//应答报文主体</span><br>           <span class="hljs-type">String</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> timestamp + <span class="hljs-string">&quot;\n&quot;</span><br>                   + nonceStr + <span class="hljs-string">&quot;\n&quot;</span><br>                   + body + <span class="hljs-string">&quot;\n&quot;</span>;<br>           <span class="hljs-comment">//验签</span><br>           <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> RsaKitUtil.checkByPublicKey(s2, signature, CertificateUtil.aesCertificate(miniMchId, serialNo, mchKey, privateKey).getPublicKey());<br>           System.out.println(b);<br>           <span class="hljs-keyword">if</span> (b) &#123;<br>               <span class="hljs-comment">//微信支付通知实体类</span><br>               <span class="hljs-type">PayTuiVo</span> <span class="hljs-variable">payTuiVo</span> <span class="hljs-operator">=</span> JSONObject.parseObject(body, PayTuiVo.class);<br>               <span class="hljs-comment">//判断是否回调成功</span><br>               <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;REFUND.SUCCESS&quot;</span>.equals(payTuiVo.getEvent_type())) &#123;<br>                   PayTuiVo.<span class="hljs-type">Resource</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> payTuiVo.getResource();<br>                   <span class="hljs-comment">//解密后资源数据</span><br>                   <span class="hljs-type">String</span> <span class="hljs-variable">notifyResourceStr</span> <span class="hljs-operator">=</span> PayResponseUtils.decryptResponseBody(resource.getAssociated_data(), resource.getNonce(), resource.getCiphertext(), mchKey);<br>                   <span class="hljs-comment">//获取退款订单号</span><br>                   <span class="hljs-type">String</span> <span class="hljs-variable">getOut_trade_no</span> <span class="hljs-operator">=</span> JSONObject.parseObject(notifyResourceStr).get(<span class="hljs-string">&quot;out_trade_no&quot;</span>).toString();<br>                   <span class="hljs-type">String</span> <span class="hljs-variable">transaction_id</span> <span class="hljs-operator">=</span> JSONObject.parseObject(notifyResourceStr).get(<span class="hljs-string">&quot;transaction_id&quot;</span>).toString();<br>                   <span class="hljs-comment">//通过订单id修改订单号  根据项目实际编写</span><br>                   <span class="hljs-type">OrderInfo</span> <span class="hljs-variable">orderInfo</span> <span class="hljs-operator">=</span> orderInfoMapper.selectOne(Wrappers.&lt;OrderInfo&gt;lambdaQuery().eq(OrderInfo::getOrderNo, getOut_trade_no).eq(OrderInfo::getWxOrderNo,transaction_id));<br>                   <span class="hljs-comment">//修改订单状态</span><br>                   <span class="hljs-keyword">if</span> (ObjectUtil.isNotEmpty(orderInfo)) &#123;<br><span class="hljs-comment">//处理退款订单信息</span><br>                       <br>                   &#125;<br>                   payVo.setCode(<span class="hljs-string">&quot;SUCCESS&quot;</span>);<br>                   payVo.setMessage(<span class="hljs-string">&quot;回调成功&quot;</span>);<br>               &#125;<br>           &#125;<br>       &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>           e.printStackTrace();<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           e.printStackTrace();<br>       &#125;<br>       <span class="hljs-keyword">return</span> payVo;<br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="八、继续支付实现案例"><a href="#八、继续支付实现案例" class="headerlink" title="八、继续支付实现案例"></a>八、继续支付实现案例</h3><p>说明：如果订单已经构建，超时未支付需要继续支付可使用下列案例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> R <span class="hljs-title function_">getPay</span><span class="hljs-params">(String orderId)</span> &#123;<br>        <span class="hljs-comment">//根据项目实际支付单信息更改</span><br>        <span class="hljs-type">OrderInfo</span> <span class="hljs-variable">orderInfo</span> <span class="hljs-operator">=</span> baseMapper.selectById(orderId);<br>        <span class="hljs-comment">//组装sign</span><br>        <span class="hljs-type">WxPaySign</span> <span class="hljs-variable">wxPay</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WxPaySign</span>();<br>        <span class="hljs-keyword">try</span> &#123;<br>            wxPay.setTimeStamp(orderInfo.getTimeStamp());<br>            wxPay.setNonceStr(orderInfo.getNonceStr());<br>            wxPay.setPrepayId(<span class="hljs-string">&quot;prepay_id=&quot;</span> + orderInfo.getPrepayId());<br>            wxPay.setSignType(<span class="hljs-string">&quot;RSA&quot;</span>);<br>            wxPay.setAppId(miniAppId);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> miniAppId + <span class="hljs-string">&quot;\n&quot;</span><br>                + orderInfo.getTimeStamp() + <span class="hljs-string">&quot;\n&quot;</span><br>                + orderInfo.getNonceStr() + <span class="hljs-string">&quot;\n&quot;</span><br>                + <span class="hljs-string">&quot;prepay_id=&quot;</span> + orderInfo.getPrepayId() + <span class="hljs-string">&quot;\n&quot;</span>;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">sign</span> <span class="hljs-operator">=</span> PayKitUtil.createSign(s, privateKey);<br>            wxPay.setPaySign(sign);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> R.ok(wxPay);<br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Centos7安装Redis</title>
    <link href="/redis%E5%AE%89%E8%A3%85(centos)/"/>
    <url>/redis%E5%AE%89%E8%A3%85(centos)/</url>
    
    <content type="html"><![CDATA[<h3 id="一、安装依赖"><a href="#一、安装依赖" class="headerlink" title="一、安装依赖"></a>一、安装依赖</h3><p>命令：yum install -y gcc</p><p>注意：如果centos有编译依赖工具(gcc)可以不用执行此步，执行了也无碍</p><h3 id="二、下载并解压安装包"><a href="#二、下载并解压安装包" class="headerlink" title="二、下载并解压安装包"></a>二、下载并解压安装包</h3><p> wget <a href="http://download.redis.io/releases/redis-5.0.3.tar.gz">http://download.redis.io/releases/redis-5.0.3.tar.gz</a> </p><p>注意：版本可以更换  地址：<a href="http://download.redis.io/releases/">http://download.redis.io/releases/</a>   后缀拼接更换的版本</p><h3 id="三、解压安装包并安装"><a href="#三、解压安装包并安装" class="headerlink" title="三、解压安装包并安装"></a>三、解压安装包并安装</h3><p>命令：cd   redis-5.0.3 </p><p>编译：make </p><p>安装：make install PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;redis        PREFIX 为指定安装至那个目录下，也可不指定直接安装</p><p>注意：根据自己下载的安装包路径进行，一般都下载在 &#x2F;usr&#x2F;local&#x2F; 目录下，也可以自定义目录    </p><h3 id="四、修改redis-conf文件"><a href="#四、修改redis-conf文件" class="headerlink" title="四、修改redis.conf文件"></a>四、修改redis.conf文件</h3><p>1、找到 requirepass      在后面增加Redis密码</p><p>2、把 daemonize no 改为 daemonize yes </p><p>3、找到 bind 127.0.0.1    将 127.0.0.1 修改成 0.0.0.0</p><h3 id="五、后台启动Redis"><a href="#五、后台启动Redis" class="headerlink" title="五、后台启动Redis"></a>五、后台启动Redis</h3><p>将修改后的redis.conf文件复制一份至安装后的 &#x2F;redis&#x2F;bin 目录下(根据自己安装的目录来)  没有bin目录可以自己创建一个</p><p>cd 到bin目录下启动Redis：.&#x2F;redis-server redis.conf</p><p>查看是否启动成功：ps -ef|grep redis           </p><p>注意：如果没有启动成功则查看redis.conf是否设置成功，设置好再重新启动</p><h3 id="六、设置开机启动"><a href="#六、设置开机启动" class="headerlink" title="六、设置开机启动"></a>六、设置开机启动</h3><h4 id="1、打开Centos系统目录设置配置文件"><a href="#1、打开Centos系统目录设置配置文件" class="headerlink" title="1、打开Centos系统目录设置配置文件"></a>1、打开Centos系统目录设置配置文件</h4><p>命令： vi &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;redis.service</p><p>注意：里面的目录根据自己实际安装目录设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Unit]<br>Description=redis-server<br>After=network.target<br><br>[Service]<br>Type=forking<br>ExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf<br>PrivateTmp=true<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h4 id="2、设置开机自启生效"><a href="#2、设置开机自启生效" class="headerlink" title="2、设置开机自启生效"></a>2、设置开机自启生效</h4><p>生效：systemctl daemon-reload </p><p>设置开机自启动：systemctl enable redis.service</p><p>停止开机自启动：systemctl disable redis.service </p><h3 id="七、启动-重启-停止-查看状态-命令"><a href="#七、启动-重启-停止-查看状态-命令" class="headerlink" title="七、启动&#x2F;重启&#x2F;停止&#x2F;查看状态 命令"></a>七、启动&#x2F;重启&#x2F;停止&#x2F;查看状态 命令</h3><p>启动redis服务：systemctl start redis.service</p><p>停止redis服务：systemctl stop redis.service</p><p>重新启动服务：systemctl restart redis.service</p><p>查看服务当前状态：systemctl status redis.service</p><h3 id="八、建立软连接"><a href="#八、建立软连接" class="headerlink" title="八、建立软连接&lt;可选项&gt;"></a>八、建立软连接&lt;可选项&gt;</h3><p>目的：可在任何目录下输入redis 进入Redis</p><p>命令(根据自己安装目录建立)： ln -s &#x2F;usr&#x2F;local&#x2F;redis&#x2F;bin&#x2F;redis-cli &#x2F;usr&#x2F;bin&#x2F;redis         </p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>多IF利用枚举消除案例</title>
    <link href="/%E6%9E%9A%E4%B8%BE%E6%B6%88%E9%99%A4%E5%A4%9AIF%E5%88%A4%E6%96%AD/"/>
    <url>/%E6%9E%9A%E4%B8%BE%E6%B6%88%E9%99%A4%E5%A4%9AIF%E5%88%A4%E6%96%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="一、枚举消除多个if判断案例"><a href="#一、枚举消除多个if判断案例" class="headerlink" title="一、枚举消除多个if判断案例"></a>一、枚举消除多个if判断案例</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">package com.edc.erp.inventory.common.enumeration;<br><br>import com.edc.erp.inventory.adjust.entity.AdjustStoreStockDetail;<br>import com.edc.erp.inventory.allot.entity.AllotStoreOrderDetail;<br>import com.edc.erp.inventory.claim.entity.ClaimStoreOrderDetail;<br>import com.edc.erp.inventory.count.hq.entity.CountHqOrderInDetail;<br>import com.edc.erp.inventory.count.pendingOrder.entity.*;<br>import com.edc.erp.inventory.count.store.entity.CountStoreOrderDetail;<br>import com.edc.erp.inventory.loss.entity.LossStoreOrderDetail;<br>import com.edc.erp.inventory.model.in.count.CountTxtIn;<br>import com.edc.erp.inventory.model.txt.<span class="hljs-keyword">OrderListTxt;</span><br><span class="hljs-keyword"></span>import lombok.RequiredArgsConstructor;<br>import <span class="hljs-keyword">org.apache.commons.collections.CollectionUtils;</span><br><span class="hljs-keyword"></span>import <span class="hljs-keyword">org.apache.commons.lang3.math.NumberUtils;</span><br><span class="hljs-keyword"></span><br>import <span class="hljs-keyword">java.util.ArrayList;</span><br><span class="hljs-keyword"></span>import <span class="hljs-keyword">java.util.List;</span><br><span class="hljs-keyword"></span><br>@RequiredArgsConstructor<br>public enum PendingOrderEnum &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 门店自主盘点单</span><br><span class="hljs-comment">     */</span><br>    storeInventorySc() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br><br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;CountStoreOrderDetail&gt; list = countTxtIn.getCountStoreOrderDetailService().list(CountStoreOrderDetail.<span class="hljs-keyword">builder().orderId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getNumberProfitLoss());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 盘入单</span><br><span class="hljs-comment">     */</span><br>    InventoryInList() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;CountHqOrderInDetail&gt; list = countTxtIn.getCountHqOrderInDetailService().list(CountHqOrderInDetail.<span class="hljs-keyword">builder().orderInId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getDiffQty());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 门店库存调整单</span><br><span class="hljs-comment">     */</span><br>    storeStock() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;AdjustStoreStockDetail&gt; list = countTxtIn.getAdjustStoreStockDetailService().list(AdjustStoreStockDetail.<span class="hljs-keyword">builder().adjustId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getAdjustQty());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 门店领用单</span><br><span class="hljs-comment">     */</span><br>    storeCollect() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;ClaimStoreOrderDetail&gt; list = countTxtIn.getClaimStoreOrderDetailService().list(ClaimStoreOrderDetail.<span class="hljs-keyword">builder().claimId(Math.toIntExact(orderId)).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setNumber(item.getQty());<br>                txt.setBarCode(item.getBarCode());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 门店调拨单</span><br><span class="hljs-comment">     */</span><br>    storeAllocation() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;AllotStoreOrderDetail&gt; list = countTxtIn.getAllotStoreOrderDetailService().list(AllotStoreOrderDetail.<span class="hljs-keyword">builder().allotId(Math.toIntExact(orderId)).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getOutQty());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 报损单</span><br><span class="hljs-comment">     */</span><br>    storeFaulty() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;LossStoreOrderDetail&gt; list = countTxtIn.getLossStoreOrderDetailService().list(LossStoreOrderDetail.<span class="hljs-keyword">builder().lossStoreId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getQty());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配货单</span><br><span class="hljs-comment">     */</span><br>    allocationOut() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDirDeliveryDetail&gt; </span>list = countTxtIn.getOrdDirDeliveryDetailService().list(<span class="hljs-keyword">OrdDirDeliveryDetail.builder().deliveryOrderId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                        txt.setBarCode(item.getBarCode());<br>                        txt.setNumber(item.getArrivalQuantity());<br>                        txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>                    &#125;<br>            );<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配货差异单</span><br><span class="hljs-comment">     */</span><br>    allocationPoorJust() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDirDelivDifferenceDetail&gt; </span>list = countTxtIn.getOrdDirDelivDifferenceDetailService().list(<span class="hljs-keyword">OrdDirDelivDifferenceDetail.builder().differenceOrderId(Math.toIntExact(orderId)).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getApplyDifferenceQuantity());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 统配退货单</span><br><span class="hljs-comment">     */</span><br>    allocationRetreat() &#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDirReturnDetail&gt; </span>list = countTxtIn.getOrdDirReturnDetailService().list(<span class="hljs-keyword">OrdDirReturnDetail.builder().returnOrderId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getAuditReturnQuantity());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配销单</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">distributiveOut() </span>&#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDisDeliveryDetail&gt; </span>list = countTxtIn.getOrdDisDeliveryDetailService().list(<span class="hljs-keyword">OrdDisDeliveryDetail.builder().deliveryOrderId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getArrivalQuantity());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配销差异单</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">distributivePoorJust() </span>&#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDisDelivDifferenceDetail&gt; </span>list = countTxtIn.getOrdDisDelivDifferenceDetailService().list(<span class="hljs-keyword">OrdDisDelivDifferenceDetail.builder().differenceOrderId(Math.toIntExact(orderId)).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getApprovalDifferenceQuantity());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts)) &#123;<br>                return txts;<br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;,<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配销退货单</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">distributiveRetreat() </span>&#123;<br>        @Override<br>        public List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId) </span>&#123;<br>            <span class="hljs-keyword">OrderListTxt </span>txt = new <span class="hljs-keyword">OrderListTxt();</span><br><span class="hljs-keyword"></span>            ArrayList&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>txts = new ArrayList&lt;&gt;();<br>            List&lt;<span class="hljs-keyword">OrdDisReturnDetail&gt; </span>list = countTxtIn.getOrdDisReturnDetailService().list(<span class="hljs-keyword">OrdDisReturnDetail.builder().returnOrderId(orderId).isDelete(NumberUtils.INTEGER_ZERO).build());</span><br><span class="hljs-keyword"></span>            list.stream().forEach(item -&gt; &#123;<br>                txt.setBarCode(item.getBarCode());<br>                txt.setNumber(item.getApplyReturnQuantity());<br>                txts.<span class="hljs-keyword">add(txt);</span><br><span class="hljs-keyword"></span>            &#125;);<br>            if (CollectionUtils.isNotEmpty(txts))&#123;<br>                return txts<span class="hljs-comment">;d</span><br>            &#125;<br>            return null;<br>        &#125;<br>    &#125;;<br><br>    public abstract List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getNumber(CountTxtIn countTxtIn, Long <span class="hljs-keyword">orderId);</span><br><span class="hljs-keyword"></span>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据对应code 获取不同方法的结果集</span><br><span class="hljs-comment">     * @param code 枚举代码即方法名 唯一标识</span><br><span class="hljs-comment">     * @param countTxtIn  需要查询数据的service服务</span><br><span class="hljs-comment">     * @param countTxtIn  需要查询数据的ID</span><br><span class="hljs-comment">     */</span><br>    public static List&lt;<span class="hljs-keyword">OrderListTxt&gt; </span>getEnmMethodByCode(String code, CountTxtIn countTxtIn, long <span class="hljs-keyword">orderId) </span>&#123;<br>        for (PendingOrderEnum ele : values()) &#123;<br>            if (ele.name().equals(code)) &#123;<br>                return ele.getNumber(countTxtIn, <span class="hljs-keyword">orderId);</span><br><span class="hljs-keyword"></span>            &#125;<br>        &#125;<br>        return null;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Java执行Shell脚本</title>
    <link href="/Java%E6%89%A7%E8%A1%8CShell%E8%84%9A%E6%9C%AC/"/>
    <url>/Java%E6%89%A7%E8%A1%8CShell%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h4 id="一、实例"><a href="#一、实例" class="headerlink" title="一、实例"></a>一、实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.chalk.admin.util;<br><br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><br><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 代码执行Shell脚本</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> cc</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2023-10-13 9:19:55</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExecuteShellUtil</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 执行Shell</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> shellPath  shell脚本全路径包含脚本名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">callShellScriptTest</span><span class="hljs-params">(String shellPath)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 创建进程构建器</span><br>            <span class="hljs-type">ProcessBuilder</span> <span class="hljs-variable">processBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>();<br><br>            <span class="hljs-comment">// 设置要执行的命令</span><br>            processBuilder.command(<span class="hljs-string">&quot;sh&quot;</span>, shellPath);<br><br>            <span class="hljs-comment">// 启动进程并等待其执行完成</span><br>            <span class="hljs-type">Process</span> <span class="hljs-variable">process</span> <span class="hljs-operator">=</span> processBuilder.start();<br>            process.waitFor();<br><br>            <span class="hljs-comment">// 获取进程的输出结果</span><br>            <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(process.getInputStream()));<br>            String line;<br>            <span class="hljs-keyword">while</span> ((line = reader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>                log.info(line);<br>            &#125;<br>            reader.close();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>RocketMQ安装(Linux)</title>
    <link href="/RocketMQ%E5%AE%89%E8%A3%85(Linux)/"/>
    <url>/RocketMQ%E5%AE%89%E8%A3%85(Linux)/</url>
    
    <content type="html"><![CDATA[<h3 id="一、下载安装包并解压"><a href="#一、下载安装包并解压" class="headerlink" title="一、下载安装包并解压"></a>一、下载安装包并解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://archive.apache.org/dist/rocketmq/4.9.4/rocketmq-all-4.9.4-bin-release.zip<br>unzip rocketmq-all-4.9.4-bin-release.zip<br></code></pre></td></tr></table></figure><h3 id="二、修改配置文件"><a href="#二、修改配置文件" class="headerlink" title="二、修改配置文件"></a>二、修改配置文件</h3><p>原因：RocketMQ 运行内存初始较大 4G-8G 则需要修改启动内存大小<br>路径：RocketMQ安装目录下的bin文件夹下</p><h4 id="2-1、修改-runserver-sh"><a href="#2-1、修改-runserver-sh" class="headerlink" title="2.1、修改(runserver.sh)"></a>2.1、修改(runserver.sh)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim rocketmq/bin/runserver.sh   <br></code></pre></td></tr></table></figure><p>以上命令打开文件后，修改内存：JAVA_OPT&#x3D;”${JAVA_OPT} -server后面的参数改为1g</p><h4 id="2-2、修改-runbroker-sh"><a href="#2-2、修改-runbroker-sh" class="headerlink" title="2.2、修改(runbroker.sh)"></a>2.2、修改(runbroker.sh)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim rocketmq/bin/runbroker.sh<br></code></pre></td></tr></table></figure><p>以上命令打开文件后，修改内存：JAVA_OPT&#x3D;”${JAVA_OPT} -server后面的参数改为1g</p><h4 id="2-3、修改-broker-conf"><a href="#2-3、修改-broker-conf" class="headerlink" title="2.3、修改(broker.conf)"></a>2.3、修改(broker.conf)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim  rocketmq/conf/broker.conf<br></code></pre></td></tr></table></figure><p>增加配置：注意 9876为rocketmq默认端口可修改    如果是集群 可以增加 brokerIP1&#x3D;服务器IP</p><p>增加内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">brokerClusterName = DefaultCluster<br>brokerName = broker-a<br>brokerId = 0<br>deleteWhen = 04<br>fileReservedTime = 48<br>brokerRole = ASYNC_MASTER<br>flushDiskType = ASYNC_FLUSH<br>namesrvAddr = 外网Ip:9878<br>brokerIP1 = 外网Ip<br>listenPort = 10911<br>autoCreateTopicEnable = true<br>autoCreateSubscriptionGroup = true<br>storePathRootDir = /usr/local/rocketmq-4.9.4/store<br>storePathCommitLog = /usr/local/rocketmq-4.9.4/store/commitlog<br>storePathConsumerQueue = /usr/local/rocketmq-4.9.4/store/consumequeue<br></code></pre></td></tr></table></figure><h3 id="三、增加配置文件"><a href="#三、增加配置文件" class="headerlink" title="三、增加配置文件"></a>三、增加配置文件</h3><h4 id="3-1、增加namesrv-properties文件"><a href="#3-1、增加namesrv-properties文件" class="headerlink" title="3.1、增加namesrv.properties文件"></a>3.1、增加namesrv.properties文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim namesrv.properties<br></code></pre></td></tr></table></figure><p>以上命令打开文件后，在文件中添加   listenPort&#x3D;9878</p><h4 id="3-2、增加broker-properties文件"><a href="#3-2、增加broker-properties文件" class="headerlink" title="3.2、增加broker.properties文件"></a>3.2、增加broker.properties文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim broker.properties<br></code></pre></td></tr></table></figure><p>以上命令打开文件后，在文件中添加  brokerIP1&#x3D;外网Ip</p><h3 id="四、开放端口-配置入站出站规则"><a href="#四、开放端口-配置入站出站规则" class="headerlink" title="四、开放端口(配置入站出站规则)"></a>四、开放端口(配置入站出站规则)</h3><p>9876：rocketmq服务端口<br>10911：rocketmq对外监听端口<br>10909：rocketmq主从同步端口</p><h3 id="五、启动和停止-rocketmq服务"><a href="#五、启动和停止-rocketmq服务" class="headerlink" title="五、启动和停止 rocketmq服务"></a>五、启动和停止 rocketmq服务</h3><h4 id="5-1、启动服务"><a href="#5-1、启动服务" class="headerlink" title="5.1、启动服务"></a>5.1、启动服务</h4><p>注意：两个都要启动  都在rocketmq安装目录下的bin文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup sh bin/mqnamesrv -c /usr/local/rocketmq-4.9.4/conf/namesrv.properties &gt; namesrv.log &amp;<br>nohup sh bin/mqbroker -n IP(自己IP):9878 -c /usr/local/rocketmq-4.9.4/conf/broker.conf &gt; broker.log &amp;<br></code></pre></td></tr></table></figure><h4 id="5-2、停止服务"><a href="#5-2、停止服务" class="headerlink" title="5.2、停止服务"></a>5.2、停止服务</h4><p>注意：先停broker服务  再停namesrv服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh bin/mqshutdown broker<br>sh bin/mqshutdown namesrv<br></code></pre></td></tr></table></figure><h3 id="六、-安装RocketMQ监控平台"><a href="#六、-安装RocketMQ监控平台" class="headerlink" title="六、(安装RocketMQ监控平台)"></a>六、(安装RocketMQ监控平台)</h3><p>注意：RocketMQ监控平台为Java项目</p><h5 id="6-1、下载"><a href="#6-1、下载" class="headerlink" title="6.1、下载"></a>6.1、下载</h5><p>下载 rocketmq-console-ng  (地址1版本新)</p><p>地址1： <a href="https://gitee.com/ralph81/rocketmq-console?_from=gitee_search">https://gitee.com/ralph81/rocketmq-console?_from=gitee_search</a><br>地址2： <a href="https://github.com/apache/rocketmq-externals/tree/release-rocketmq-console-1.0.0">https://github.com/apache/rocketmq-externals/tree/release-rocketmq-console-1.0.0</a> </p><h5 id="6-2、安装和打包-maven命令打包"><a href="#6-2、安装和打包-maven命令打包" class="headerlink" title="6.2、安装和打包(maven命令打包)"></a>6.2、安装和打包(maven命令打包)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">mvn clean install -Dmaven.test.skip=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h4 id="6-3、启动RocketMQ监控平台"><a href="#6-3、启动RocketMQ监控平台" class="headerlink" title="6.3、启动RocketMQ监控平台"></a>6.3、启动RocketMQ监控平台</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup java -jar -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=256m rocketmq-console-ng-2.0.0.jar &amp;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>jdk Linux环境变量配置</title>
    <link href="/Java%20Linux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
    <url>/Java%20Linux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="一、jdk下载"><a href="#一、jdk下载" class="headerlink" title="一、jdk下载"></a>一、jdk下载</h3><h4 id="1、下载地址"><a href="#1、下载地址" class="headerlink" title="1、下载地址"></a>1、下载地址</h4><p><a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html</a></p><h4 id="2、下载版本举例"><a href="#2、下载版本举例" class="headerlink" title="2、下载版本举例"></a>2、下载版本举例</h4><p>jdk-8u301-linux-x64.tar.gz</p><h3 id="二、解压并安装"><a href="#二、解压并安装" class="headerlink" title="二、解压并安装"></a>二、解压并安装</h3><h4 id="1、解压-jdk版本可自行下载"><a href="#1、解压-jdk版本可自行下载" class="headerlink" title="1、解压(jdk版本可自行下载)"></a>1、解压(jdk版本可自行下载)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf jdk-8u301-linux-x64.tar.gz<br></code></pre></td></tr></table></figure><h4 id="2、移动"><a href="#2、移动" class="headerlink" title="2、移动"></a>2、移动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">jdk-8u301-linux-x64.tar.gz 解压之后为 jdk1.8.0_301</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash">命令：<span class="hljs-built_in">mv</span> 解压之后的jdk路径  /usr/local/java         将加压之后的jdk 移动至 /usr/local/路径下的 java目录</span><br>mv jdk1.8.0_301/ /usr/local/java<br></code></pre></td></tr></table></figure><h3 id="三、设置环境变量"><a href="#三、设置环境变量" class="headerlink" title="三、设置环境变量"></a>三、设置环境变量</h3><h4 id="1、打开环境变量-profile"><a href="#1、打开环境变量-profile" class="headerlink" title="1、打开环境变量(profile)"></a>1、打开环境变量(profile)</h4><p>命令：vim &#x2F;etc&#x2F;profile</p><h4 id="2、添加环境变量"><a href="#2、添加环境变量" class="headerlink" title="2、添加环境变量"></a>2、添加环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">---Set Java Environment---</span><br>JAVA_HOME=/usr/local/java<br>JRE_HOME=/usr/local/java/jre<br>CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib<br>PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin<br>export JAVA_HOME JRE_HOME CLASS_PATH PATH<br><span class="hljs-meta prompt_"># </span><span class="language-bash">---Set Java Environment---</span><br></code></pre></td></tr></table></figure><h4 id="3、使环境变量生效"><a href="#3、使环境变量生效" class="headerlink" title="3、使环境变量生效"></a>3、使环境变量生效</h4><p>命令： source &#x2F;etc&#x2F;profile</p><h3 id="四、测试是否安装成功"><a href="#四、测试是否安装成功" class="headerlink" title="四、测试是否安装成功"></a>四、测试是否安装成功</h3><h4 id="1、命令"><a href="#1、命令" class="headerlink" title="1、命令"></a>1、命令</h4><p>java -version     javac -version</p><h4 id="2、检验安装结果"><a href="#2、检验安装结果" class="headerlink" title="2、检验安装结果"></a>2、检验安装结果</h4><p>java -version 出现下面显示的则表示成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">java version &quot;1.8.0_301&quot;<br>Java(TM) SE Runtime Environment (build 1.8.0_301-b09)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)<br></code></pre></td></tr></table></figure><p>javac -version 出现下面显示的则表示成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">javac 1.8.0_301<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>短信SDK配置和应用</title>
    <link href="/%E7%9F%AD%E4%BF%A1SDK%E9%85%8D%E7%BD%AE%E5%92%8C%E5%BA%94%E7%94%A8/"/>
    <url>/%E7%9F%AD%E4%BF%A1SDK%E9%85%8D%E7%BD%AE%E5%92%8C%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="一、腾讯云短信"><a href="#一、腾讯云短信" class="headerlink" title="一、腾讯云短信"></a>一、腾讯云短信</h3><h4 id="1、腾讯短信模板配置"><a href="#1、腾讯短信模板配置" class="headerlink" title="1、腾讯短信模板配置"></a>1、腾讯短信模板配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java">#腾讯云短信(以下内容根据业务进行变更)<br>tencent:<br>  sms:<br>    #短信<br>    secret-id: AKIDMZYJpEalkXBcq34ua4MTO7f097tSs55s<br>    secret-key: c2FF4jCSZotoX5RbYIqGTSEqGTUIwOdg<br>    #appID <br>    sdk-app-id: <span class="hljs-number">1400662504</span><br>    #signName 签名<br>    sign-name: 治齐环保<br>    #检测报告模板<br>    report-template: <span class="hljs-number">1384315</span><br>    #耗材提醒模板<br>    consumable-template: <span class="hljs-number">1384299</span><br></code></pre></td></tr></table></figure><h4 id="2、腾讯短信SDK《pom》依赖"><a href="#2、腾讯短信SDK《pom》依赖" class="headerlink" title="2、腾讯短信SDK《pom》依赖"></a>2、腾讯短信SDK《pom》依赖</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- tencent sms 此依赖版本可替换或更新 --&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;com.tencentcloudapi&lt;/groupId&gt;<br>    &lt;artifactId&gt;tencentcloud-sdk-java&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">3.1</span><span class="hljs-number">.62</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><h4 id="3、腾讯短信SDK"><a href="#3、腾讯短信SDK" class="headerlink" title="3、腾讯短信SDK"></a>3、腾讯短信SDK</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 腾讯云短信服务</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> 腾讯短信验证 client</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2022-04-27 17:19</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TencentSmsClient</span> &#123;<br>    <span class="hljs-comment">/* 下发手机号码前缀，采用 e.164 标准，+[国家或地区码][手机号] */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">phoneNumberHead</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;+86&quot;</span>;<br>    <span class="hljs-comment">/* 此处需要替换成开发者自己的(在腾讯云访问控制台寻找) */</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;tencent.sms.secret-id&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String secretId;<br>    <span class="hljs-meta">@Value(&quot;$&#123;tencent.sms.secret-key&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String secretKey;<br><br>    <span class="hljs-comment">/* 签名 */</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;tencent.sms.sign-name&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String signName;<br>    <span class="hljs-comment">/* 短信应用 ID: 在 [短信控制台] 添加应用后生成的实际 sdkAppId，例如1400006666 */</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;tencent.sms.sdk-app-id&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String sdkAppId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送短信内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> phoneNumber 手机号</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code        验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> templateId  短信模板</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> TencentCloudSDKException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendSmsCode</span><span class="hljs-params">(String phoneNumber, String code, String templateId)</span> <span class="hljs-keyword">throws</span> TencentCloudSDKException &#123;<br><br>        <span class="hljs-type">Credential</span> <span class="hljs-variable">cred</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Credential</span>(secretId, secretKey);<br><br>        <span class="hljs-type">HttpProfile</span> <span class="hljs-variable">httpProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpProfile</span>();<br>        httpProfile.setEndpoint(<span class="hljs-string">&quot;sms.tencentcloudapi.com&quot;</span>);<br><br>        <span class="hljs-type">ClientProfile</span> <span class="hljs-variable">clientProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClientProfile</span>();<br>        clientProfile.setHttpProfile(httpProfile);<br><br>        <span class="hljs-type">SmsClient</span> <span class="hljs-variable">client</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SmsClient</span>(cred, <span class="hljs-string">&quot;ap-beijing&quot;</span>, clientProfile);<br><br>        <span class="hljs-type">SendSmsRequest</span> <span class="hljs-variable">req</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendSmsRequest</span>();<br><br>        <span class="hljs-comment">/* 短信应用 ID: 在 [短信控制台] 添加应用后生成的实际 sdkAppId，例如1400006666 */</span><br>        req.setSmsSdkAppId(sdkAppId);<br><br>        <span class="hljs-comment">/* 短信签名内容: 使用 UTF-8 编码，必须填写已审核通过的签名，可登录 [短信控制台] 查看签名信息 */</span><br>        req.setSignName(signName);<br><br>        <span class="hljs-comment">/* 模板 ID: 必须填写已审核通过的模板 ID，可登录 [短信控制台] 查看模板 ID */</span><br>        req.setTemplateId(templateId);<br><br>        <span class="hljs-comment">/* 下发手机号码，采用 e.164 标准，+[国家或地区码][手机号]</span><br><span class="hljs-comment">        * 例如+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号，最多不要超过200个手机号*/</span><br>        String[] phoneNumbers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">1</span>];<br>        phoneNumbers[<span class="hljs-number">0</span>] = phoneNumberHead + phoneNumber;<br>        req.setPhoneNumberSet(phoneNumbers);<br><br>        <span class="hljs-comment">/* 模板参数: 若无模板参数，则设置为空*/</span><br>        String[] codes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">1</span>];<br>        codes[<span class="hljs-number">0</span>] = code;<br>        req.setTemplateParamSet(codes);<br><br>        <span class="hljs-type">SendSmsResponse</span> <span class="hljs-variable">resp</span> <span class="hljs-operator">=</span> client.SendSms(req);<br>        System.out.println(<span class="hljs-string">&quot;短信验证码接口返回的数据：&quot;</span> + SendSmsResponse.toJsonString(resp));<br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;Ok&quot;</span>.equals(resp.getSendStatusSet()[<span class="hljs-number">0</span>].getCode())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送短信验证码</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> TencentCloudSDKException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendSmsContent</span><span class="hljs-params">(String[] phoneNumbers, String[] content, String templateId)</span> <span class="hljs-keyword">throws</span> TencentCloudSDKException &#123;<br><br>        <span class="hljs-type">Credential</span> <span class="hljs-variable">cred</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Credential</span>(secretId, secretKey);<br><br>        <span class="hljs-type">HttpProfile</span> <span class="hljs-variable">httpProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpProfile</span>();<br>        httpProfile.setEndpoint(<span class="hljs-string">&quot;sms.tencentcloudapi.com&quot;</span>);<br><br>        <span class="hljs-type">ClientProfile</span> <span class="hljs-variable">clientProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClientProfile</span>();<br>        clientProfile.setHttpProfile(httpProfile);<br><br>        <span class="hljs-type">SmsClient</span> <span class="hljs-variable">client</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SmsClient</span>(cred, <span class="hljs-string">&quot;ap-beijing&quot;</span>, clientProfile);<br><br>        <span class="hljs-type">SendSmsRequest</span> <span class="hljs-variable">req</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendSmsRequest</span>();<br><br>        <span class="hljs-comment">/* 短信应用 ID: 在 [短信控制台] 添加应用后生成的实际 sdkAppId，例如1400006666 */</span><br>        req.setSmsSdkAppId(sdkAppId);<br><br>        <span class="hljs-comment">/* 短信签名内容: 使用 UTF-8 编码，必须填写已审核通过的签名，可登录 [短信控制台] 查看签名信息 */</span><br>        req.setSignName(signName);<br><br>        <span class="hljs-comment">/* 模板 ID: 必须填写已审核通过的模板 ID，可登录 [短信控制台] 查看模板 ID */</span><br>        req.setTemplateId(templateId);<br><br>        <span class="hljs-comment">/* 下发手机号码，采用 e.164 标准，+[国家或地区码][手机号]</span><br><span class="hljs-comment">        * 例如+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号，最多不要超过200个手机号*/</span><br>        req.setPhoneNumberSet(phoneNumbers);<br><br>        <span class="hljs-comment">/* 模板参数: 若无模板参数，则设置为空*/</span><br>        req.setTemplateParamSet(content);<br><br>        <span class="hljs-type">SendSmsResponse</span> <span class="hljs-variable">resp</span> <span class="hljs-operator">=</span> client.SendSms(req);<br><br>        log.info(<span class="hljs-string">&quot;短信验证码接口返回的数据：&quot;</span> + SendSmsResponse.toJsonString(resp));<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;Ok&quot;</span>.equals(resp.getSendStatusSet()[<span class="hljs-number">0</span>].getCode())) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4、腾讯短信实际应用"><a href="#4、腾讯短信实际应用" class="headerlink" title="4、腾讯短信实际应用"></a>4、腾讯短信实际应用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 举例短信实现 仅供参考</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reportExpire</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-comment">//根据模板规则组装短信内容</span><br>    ArrayList&lt;String&gt; smsContent = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    smsContent.add(<span class="hljs-string">&quot;&quot;</span>);<br>    smsContent.add(<span class="hljs-string">&quot;&quot;</span>);<br>    smsContent.add(<span class="hljs-string">&quot;&quot;</span>);<br>    <br>    <span class="hljs-comment">//发送短信</span><br>    <span class="hljs-built_in">this</span>.tencentSmsSend(用户ID列表,smsContent,对应的腾讯模板ID);<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 短信发送</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> user 用户列表-获取用户手机号</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> content 内容</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> smsTemplate 模板</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@Async</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">tencentSmsSend</span><span class="hljs-params">(List&lt;SysUser&gt; user,ArrayList&lt;String&gt; content,String smsTemplate)</span>&#123;<br>    <span class="hljs-comment">//保存用户id</span><br>    ArrayList&lt;String&gt; phones = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-comment">//获取用户手机号</span><br>    user.stream().forEach(sysUser -&gt; &#123;<br>        phones.add(sysUser.getPhonenumber());<br>    &#125;);<br><br>    <span class="hljs-comment">//List转String数组</span><br>    String[] phoneNumbers = phones.toArray(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[phones.size()]);<br>    String[] contents = content.toArray(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[content.size()]);<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//发送短信</span><br>        tencentSmsClient.sendSmsContent(phoneNumbers,contents,smsTemplate);<br>    &#125; <span class="hljs-keyword">catch</span> (TencentCloudSDKException e) &#123;<br>        log.error(<span class="hljs-string">&quot;短信发送异常 &quot;</span> + e.getMessage());<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="二、阿里云短信"><a href="#二、阿里云短信" class="headerlink" title="二、阿里云短信"></a>二、阿里云短信</h3><h4 id="1、阿里短信模板配置"><a href="#1、阿里短信模板配置" class="headerlink" title="1、阿里短信模板配置"></a>1、阿里短信模板配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java">#阿里云短信(以下内容根据业务进行变更)<br>aliyun:<br>  sms:<br>    #短信<br>    access-key-id: LTAIRjNDqTYsGyol<br>    access-key-secret: cEFzoeK8pP1dargRtYGofPmwvbZH50<br>    #signName 签名<br>    sign-name: 粉笔科技<br>    #验证码短信模板<br>    verification-code-template: SMS_136166497<br>    #redis<br>    redis-head: SMS_<br>    #超时时间<br>    expire-time: <span class="hljs-number">300</span><br></code></pre></td></tr></table></figure><h4 id="2、阿里短信SDK《pom》依赖"><a href="#2、阿里短信SDK《pom》依赖" class="headerlink" title="2、阿里短信SDK《pom》依赖"></a>2、阿里短信SDK《pom》依赖</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- aliyun sms 此依赖版本可替换或更新--&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;com.aliyun&lt;/groupId&gt;<br>    &lt;artifactId&gt;aliyun-java-sdk-dysmsapi&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">1.1</span><span class="hljs-number">.0</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br>  <br>&lt;!-- aliyun core --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;com.aliyun&lt;/groupId&gt;<br>        &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">4.0</span><span class="hljs-number">.3</span>&lt;/version&gt;<br>        &lt;exclusions&gt;<br>            &lt;exclusion&gt;<br>            &lt;artifactId&gt;gson&lt;/artifactId&gt;<br>            &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;<br>            &lt;/exclusion&gt;<br>        &lt;/exclusions&gt;<br>    &lt;/dependency&gt;<br>    <br>&lt;!-- gson --&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;<br>    &lt;artifactId&gt;gson&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.8</span><span class="hljs-number">.5</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><h4 id="3、阿里短信SDK"><a href="#3、阿里短信SDK" class="headerlink" title="3、阿里短信SDK"></a>3、阿里短信SDK</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><code class="hljs java">====================================阿里云短信JSON工具类============================================<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> Json 工具类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2022-04-27 17:19</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GsonUtils</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Gson</span> <span class="hljs-variable">GSON</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gson</span>();<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">JsonParser</span> <span class="hljs-variable">JSON_PARSER</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JsonParser</span>();<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TERMINATOR</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><br>    <span class="hljs-comment">/* 对象转换成Json */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">beanToJson</span><span class="hljs-params">(Object obj)</span> &#123;<br>        <span class="hljs-keyword">return</span> GSON.toJson(obj);<br>    &#125;<br><br>    <span class="hljs-comment">/* 对象转换成发送Json */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">beanToSendJson</span><span class="hljs-params">(Object obj)</span> &#123;<br>        <span class="hljs-keyword">return</span> GSON.toJson(obj) + TERMINATOR;<br>    &#125;<br><br>    <span class="hljs-comment">/* Json转换成Bean */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title function_">jsonToBean</span><span class="hljs-params">(String json, Class&lt;T&gt; classs)</span> &#123;<br>        <span class="hljs-keyword">return</span> GSON.fromJson(json, classs);<br>    &#125;<br><br>    <span class="hljs-comment">/* Json转换成Bean */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title function_">jsonToBean</span><span class="hljs-params">(String json, Type typeOfT)</span> &#123;<br>        <span class="hljs-keyword">return</span> GSON.fromJson(json, typeOfT);<br>    &#125;<br><br>    <span class="hljs-comment">/* Json转换成JsonObject */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> JsonObject <span class="hljs-title function_">jsonToJsonObject</span><span class="hljs-params">(String json)</span> &#123;<br>        <span class="hljs-keyword">return</span> JSON_PARSER.parse(json).getAsJsonObject();<br>    &#125;<br><br>&#125;<br><br><br>====================================阿里云短信SDK============================================<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> 阿里短信验证</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2022-04-27 17:19</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AliSmsClient</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">LOGGER</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(AliSmsClient.class);<br><br>    <span class="hljs-comment">/* 产品名称:云通信短信API产品,开发者无需替换 */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">product</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Dysmsapi&quot;</span>;<br>    <span class="hljs-comment">/* 产品域名,开发者无需替换 */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">domain</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dysmsapi.aliyuncs.com&quot;</span>;<br><br>    <span class="hljs-comment">/* 此处需要替换成开发者自己的AK(在阿里云访问控制台寻找) */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String accessKeyId;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String accessKeySecret;<br><br>    <span class="hljs-comment">/* 签名 */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String signName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送短信验证码</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> phone        手机号</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code         验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> templateCode 短信模板</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> ClientException</span><br><span class="hljs-comment">     */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendSmsCode</span><span class="hljs-params">(String phone, String code, String templateCode)</span> <span class="hljs-keyword">throws</span> ClientException &#123;<br>        LOGGER.info(<span class="hljs-string">&quot;短信验证码接口发送的数据：Phone = &#123;&#125;, Code = &#123;&#125;, SignName = &#123;&#125;, TemplateCode = &#123;&#125;&quot;</span>, phone, code, signName, templateCode);<br>        <span class="hljs-comment">/* 可自助调整超时时间 */</span><br>        System.setProperty(<span class="hljs-string">&quot;sun.net.client.defaultConnectTimeout&quot;</span>, <span class="hljs-string">&quot;10000&quot;</span>);<br>        System.setProperty(<span class="hljs-string">&quot;sun.net.client.defaultReadTimeout&quot;</span>, <span class="hljs-string">&quot;10000&quot;</span>);<br>        <span class="hljs-comment">/* 初始化acsClient,暂不支持region化 */</span><br>        <span class="hljs-type">IClientProfile</span> <span class="hljs-variable">profile</span> <span class="hljs-operator">=</span> DefaultProfile.getProfile(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>, accessKeyId, accessKeySecret);<br>        DefaultProfile.addEndpoint(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>, <span class="hljs-string">&quot;cn-hangzhou&quot;</span>, product, domain);<br>        <span class="hljs-type">IAcsClient</span> <span class="hljs-variable">acsClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultAcsClient</span>(profile);<br>        <span class="hljs-comment">/* 组装请求对象-具体描述见控制台-文档部分内容 */</span><br>        <span class="hljs-type">SendSmsRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendSmsRequest</span>();<br>        <span class="hljs-comment">/* 必填:待发送手机号 */</span><br>        request.setPhoneNumbers(phone);<br>        <span class="hljs-comment">/* 必填:短信签名-可在短信控制台中找到 */</span><br>        request.setSignName(signName);<br>        <span class="hljs-comment">/* 必填:短信模板-可在短信控制台中找到 */</span><br>        request.setTemplateCode(templateCode);<br>        <span class="hljs-comment">/* 可选:模板中的变量替换JSON串 */</span><br>        request.setTemplateParam(<span class="hljs-string">&quot;&#123;\&quot;code\&quot;:\&quot;&quot;</span> + code + <span class="hljs-string">&quot;\&quot;&#125;&quot;</span>);<br>        <span class="hljs-comment">/* 选填-上行短信扩展码(无特殊需求用户请忽略此字段) */</span><br>        <span class="hljs-comment">//request.setSmsUpExtendCode(&quot;90997&quot;);</span><br>        <span class="hljs-comment">/* 可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者 */</span><br>        <span class="hljs-comment">//request.setOutId(&quot;100003844&quot;);</span><br>        <span class="hljs-type">SendSmsResponse</span> <span class="hljs-variable">sendSmsResponse</span> <span class="hljs-operator">=</span> acsClient.getAcsResponse(request);<br>        LOGGER.info(<span class="hljs-string">&quot;短信验证码接口返回的数据：Code = &#123;&#125;, Message = &#123;&#125;, RequestId = &#123;&#125;, BizId = &#123;&#125;&quot;</span>, sendSmsResponse.getCode(), sendSmsResponse.getMessage(), sendSmsResponse.getRequestId(), sendSmsResponse.getBizId());<br>        <span class="hljs-type">String</span> <span class="hljs-variable">responseCode</span> <span class="hljs-operator">=</span> sendSmsResponse.getCode();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;OK&quot;</span>.equals(responseCode)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送短信内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> phone        手机号</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> content      内容</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> templateCode 短信模板</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> ClientException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">sendSmsContent</span><span class="hljs-params">(String phone, Map&lt;String, String&gt; content, String templateCode)</span> <span class="hljs-keyword">throws</span> ClientException &#123;<br>        LOGGER.info(<span class="hljs-string">&quot;短信内容接口发送的数据：Phone = &#123;&#125;, Content = &#123;&#125;, SignName = &#123;&#125;, TemplateCode = &#123;&#125;&quot;</span>, phone, GsonUtils.beanToJson(content), signName, templateCode);<br>        <span class="hljs-comment">/* 可自助调整超时时间 */</span><br>        System.setProperty(<span class="hljs-string">&quot;sun.net.client.defaultConnectTimeout&quot;</span>, <span class="hljs-string">&quot;10000&quot;</span>);<br>        System.setProperty(<span class="hljs-string">&quot;sun.net.client.defaultReadTimeout&quot;</span>, <span class="hljs-string">&quot;10000&quot;</span>);<br>        <span class="hljs-comment">/* 初始化acsClient,暂不支持region化 */</span><br>        <span class="hljs-type">IClientProfile</span> <span class="hljs-variable">profile</span> <span class="hljs-operator">=</span> DefaultProfile.getProfile(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>, accessKeyId, accessKeySecret);<br>        DefaultProfile.addEndpoint(<span class="hljs-string">&quot;cn-hangzhou&quot;</span>, <span class="hljs-string">&quot;cn-hangzhou&quot;</span>, product, domain);<br>        <span class="hljs-type">IAcsClient</span> <span class="hljs-variable">acsClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultAcsClient</span>(profile);<br>        <span class="hljs-comment">/* 组装请求对象-具体描述见控制台-文档部分内容 */</span><br>        <span class="hljs-type">SendSmsRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendSmsRequest</span>();<br>        <span class="hljs-comment">/* 必填:待发送手机号 */</span><br>        request.setPhoneNumbers(phone);<br>        <span class="hljs-comment">/* 必填:短信签名-可在短信控制台中找到 */</span><br>        request.setSignName(signName);<br>        <span class="hljs-comment">/* 必填:短信模板-可在短信控制台中找到 */</span><br>        request.setTemplateCode(templateCode);<br>        <span class="hljs-comment">/* 可选:模板中的变量替换JSON串 */</span><br>        request.setTemplateParam(GsonUtils.beanToJson(content));<br>        <span class="hljs-comment">/* 选填-上行短信扩展码(无特殊需求用户请忽略此字段) */</span><br>        <span class="hljs-comment">//request.setSmsUpExtendCode(&quot;90997&quot;);</span><br>        <span class="hljs-comment">/* 可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者 */</span><br>        <span class="hljs-comment">//request.setOutId(&quot;100003844&quot;);</span><br>        <span class="hljs-type">SendSmsResponse</span> <span class="hljs-variable">sendSmsResponse</span> <span class="hljs-operator">=</span> acsClient.getAcsResponse(request);<br>        LOGGER.info(<span class="hljs-string">&quot;短信内容接口返回的数据：Code = &#123;&#125;, Message = &#123;&#125;, RequestId = &#123;&#125;, BizId = &#123;&#125;&quot;</span>, sendSmsResponse.getCode(), sendSmsResponse.getMessage(), sendSmsResponse.getRequestId(), sendSmsResponse.getBizId());<br>        <span class="hljs-type">String</span> <span class="hljs-variable">responseCode</span> <span class="hljs-operator">=</span> sendSmsResponse.getCode();<br>        <span class="hljs-keyword">if</span> (responseCode.equals(<span class="hljs-string">&quot;OK&quot;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;aliyun.sms.access-key-id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccessKeyId</span><span class="hljs-params">(String accessKeyId)</span> &#123;<br>        AliSmsClient.accessKeyId = accessKeyId;<br>    &#125;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;aliyun.sms.access-key-secret&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccessKeySecret</span><span class="hljs-params">(String accessKeySecret)</span> &#123;<br>        AliSmsClient.accessKeySecret = accessKeySecret;<br>    &#125;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;aliyun.sms.sign-name&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSignName</span><span class="hljs-params">(String signName)</span> &#123;<br>        AliSmsClient.signName = signName;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4、阿里短信实际应用"><a href="#4、阿里短信实际应用" class="headerlink" title="4、阿里短信实际应用"></a>4、阿里短信实际应用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> aliyunSmsSend&#123;<br>    <span class="hljs-comment">//短信内容</span><br>    Map&lt;String, String&gt; content = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;String, String&gt;();<br>    content.put(key, value);<br>    content.put(key, value);<br>    <span class="hljs-comment">//发送短信</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        AliSmsClient.sendSmsContent(phone, content, 短信模板);<br>    &#125; <span class="hljs-keyword">catch</span> (ClientException e) &#123;<br>        log.error(<span class="hljs-string">&quot;短信发送异常 &quot;</span> + e.getMessage());<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>线程池应用实例</title>
    <link href="/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B/"/>
    <url>/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="一、线程池应用实例"><a href="#一、线程池应用实例" class="headerlink" title="一、线程池应用实例"></a>一、线程池应用实例</h2><h4 id="1、自定义线程池工具类"><a href="#1、自定义线程池工具类" class="headerlink" title="1、自定义线程池工具类"></a>1、自定义线程池工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.chalk.common.core.utils;<br><br><span class="hljs-keyword">import</span> org.apache.commons.lang3.math.NumberUtils;<br><span class="hljs-keyword">import</span> org.apache.poi.ss.formula.functions.T;<br><br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.concurrent.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2023-08-23</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadPoolUtil</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 线程池</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@corePoolSize</span>:初始线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@maximumPoolSize</span>:最大线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@keepAliveTime</span>:等待时间</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@TimeUnit</span>.SECONDS:秒</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@ArrayBlockingQueue</span>：数组阻塞队列</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@CallerRunsPolicy</span>：拒绝策略</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ExecutorService</span> <span class="hljs-variable">exc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>(<br>            <span class="hljs-number">2</span>,<br>            <span class="hljs-number">5</span>,<br>            <span class="hljs-number">10</span>,<br>            TimeUnit.SECONDS,<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayBlockingQueue</span>&lt;Runnable&gt;(<span class="hljs-number">2</span>),<br>            Thread::<span class="hljs-keyword">new</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>.CallerRunsPolicy()<br>    );<br><br><br>    <span class="hljs-keyword">public</span> ThreadPoolExecutor <span class="hljs-title function_">exc</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>(<br>                <span class="hljs-number">2</span>,<br>                <span class="hljs-number">5</span>,<br>                <span class="hljs-number">10</span>,<br>                TimeUnit.SECONDS,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayBlockingQueue</span>&lt;Runnable&gt;(<span class="hljs-number">2</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@corePoolSize</span>:初始线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@maximumPoolSize</span>:最大线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@keepAliveTime</span>:等待时间</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@TimeUnit</span>.MILLISECONDS:毫秒</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@ArrayBlockingQueue</span>：数组阻塞队列(有界缓存等待队列)</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@CallerRunsPolicy</span>：拒绝策略</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> ThreadPoolExecutor <span class="hljs-title function_">running</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>(<br>                <span class="hljs-number">4</span>,<br>                <span class="hljs-number">6</span>,<br>                <span class="hljs-number">1L</span>,<br>                TimeUnit.MILLISECONDS,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayBlockingQueue</span>&lt;Runnable&gt;(<span class="hljs-number">2</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>.CallerRunsPolicy()<br>        );<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@corePoolSize</span>:初始线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@maximumPoolSize</span>:最大线程数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@keepAliveTime</span>:等待时间</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@TimeUnit</span>.MILLISECONDS:毫秒</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@LinkedBlockingDeque</span>：数组阻塞队列(无界缓存等待队列)</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@ThreadFactory</span> 线程工厂</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@CallerRunsPolicy</span>：相对其它拒绝策略-》号称最完善的拒绝策略</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> ThreadPoolExecutor <span class="hljs-title function_">runPool</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>(<br>                <span class="hljs-number">4</span>,<br>                <span class="hljs-number">8</span>,<br>                <span class="hljs-number">5L</span>,<br>                TimeUnit.MILLISECONDS,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedBlockingDeque</span>&lt;&gt;(<span class="hljs-number">4</span>),<br>                Executors.defaultThreadFactory(),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolExecutor</span>.CallerRunsPolicy()<br>        );<br>    &#125;<br><br><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>        <span class="hljs-type">long</span> id;<br>        String name;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-title function_">Student</span><span class="hljs-params">(<span class="hljs-type">long</span> id, String name)</span> &#123;<br>            <span class="hljs-built_in">this</span>.id = id;<br>            <span class="hljs-built_in">this</span>.name = name;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> id;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setId</span><span class="hljs-params">(<span class="hljs-type">long</span> id)</span> &#123;<br>            <span class="hljs-built_in">this</span>.id = id;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">return</span> name;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>            <span class="hljs-built_in">this</span>.name = name;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        List&lt;Student&gt; students = Arrays.asList(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">5L</span>, <span class="hljs-string">&quot;张三&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">6L</span>, <span class="hljs-string">&quot;李四&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明2&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明3&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明4&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明5&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明6&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明7&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明8&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明9&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明0&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明90&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明80&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明70&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明45&quot;</span>),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-number">8L</span>, <span class="hljs-string">&quot;小明65&quot;</span>)<br>        );<br>        <span class="hljs-type">ThreadPoolExecutor</span> <span class="hljs-variable">running</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolUtil</span>().running();<br>        <span class="hljs-keyword">try</span>&#123;<br>            students.forEach(s -&gt; &#123;<br>                running.execute(<br>                        () -&gt; &#123;<br>                            System.out.println(<br>                                    s.getName()<br>                                    + <span class="hljs-string">&quot;-----当前线程:&quot;</span> + Thread.currentThread().getName()<br>                                    + <span class="hljs-string">&quot;-----当前队列数：&quot;</span> + running.getQueue().size()<br>                                    + <span class="hljs-string">&quot;-----当前线程数：&quot;</span> + running.getActiveCount()<br>                                    + <span class="hljs-string">&quot;-----线程池已经执行的任务总数：&quot;</span> + running.getCompletedTaskCount());<br>                        &#125;<br>                );<br>            &#125;);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            System.out.println(<span class="hljs-string">&quot;处理异常-------------------------------：&quot;</span> + e);<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            running.shutdown();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2、案例一"><a href="#2、案例一" class="headerlink" title="2、案例一"></a>2、案例一</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> R <span class="hljs-title function_">batchConfirm</span><span class="hljs-params">(String[] ids)</span> &#123;<br>        List&lt;Payment&gt; payments = <span class="hljs-built_in">super</span>.listByIds(Arrays.asList(ids));<br>        <span class="hljs-keyword">if</span> (CollectionUtils.isEmpty(payments)) &#123;<br>            <span class="hljs-keyword">return</span> R.failed(<span class="hljs-string">&quot;缴费信息不存在!&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//查询水户档案</span><br>        List&lt;WaterUserRecord&gt; waterUserRecords = waterUserRecordService.list(Wrappers.&lt;WaterUserRecord&gt;lambdaQuery()<br>                .eq(WaterUserRecord::getUserNumber, payments.stream().map(p -&gt; StringUtils.isNotBlank(p.getUserNumber()) ? p.getUserNumber() : <span class="hljs-string">&quot;&quot;</span>).collect(Collectors.toList()))<br>                .eq(WaterUserRecord::getIsDeleted, org.apache.commons.lang.math.NumberUtils.INTEGER_ZERO));<br>        <span class="hljs-comment">//转换map</span><br>        Map&lt;String, WaterUserRecord&gt; waterUserRecordMap = waterUserRecords.stream().filter(w -&gt; StringUtils.isNotBlank(w.getUserNumber())).collect(Collectors.toMap(WaterUserRecord::getUserNumber, item -&gt; item));<br><br><br>        <span class="hljs-comment">//获取当前用户id</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> SecurityUtils.getOauthLoginUser().getId();<br>        <span class="hljs-comment">//利用 线程池处理发票</span><br>        <span class="hljs-type">ThreadPoolExecutor</span> <span class="hljs-variable">running</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolUtil</span>().running();<br>        <span class="hljs-keyword">try</span>&#123;<br>            Future&lt;?&gt; future = <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">for</span> (Payment payment : payments) &#123;<br>                <span class="hljs-comment">//加入redis 避免重复</span><br>                <span class="hljs-type">Boolean</span> <span class="hljs-variable">exists</span> <span class="hljs-operator">=</span> redisService.exists(CacheConstants.ORDER_NUMBER_CACHE + payment.getPaymentId());<br>                <span class="hljs-keyword">if</span>(Boolean.TRUE.equals(exists))&#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                <span class="hljs-comment">//如果不存在 则添加redis</span><br>                redisService.setCacheObject(CacheConstants.ORDER_NUMBER_CACHE + payment.getPaymentId(),payment.getPaymentId(),<span class="hljs-number">3</span>,TimeUnit.MINUTES);<br>                future = running.submit(<br>                        () -&gt; &#123;<br>                            log.info(<span class="hljs-string">&quot;当前订单=》&#123;&#125;《=开始处理-----------------------------------&quot;</span>,payment.getPaymentId());<br>                            <span class="hljs-type">HXInvoiceVo</span> <span class="hljs-variable">hxInvoiceVo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HXInvoiceVo</span>();<br>                            hxInvoiceVo.setInvoiceNumber(payment.getPaymentId());<br>                            hxInvoiceVo.setInvoiceSum(payment.getTotalAmount());<br><br>                            <span class="hljs-comment">//判断是否是专票</span><br>                            <span class="hljs-type">Integer</span> <span class="hljs-variable">invoiceType</span> <span class="hljs-operator">=</span> CommonConstants.ORD_INVOICE_TYPE;<br>                            <span class="hljs-type">WaterUserRecord</span> <span class="hljs-variable">userRecord</span> <span class="hljs-operator">=</span> waterUserRecordMap.get(payment.getUserNumber());<br>                            <span class="hljs-keyword">if</span>(Objects.nonNull(userRecord) &amp;&amp; CommonConstants.VAT_INVOICE_TYPE.equals(userRecord.getInvoiceType()))&#123;<br>                                invoiceType = CommonConstants.VAT_INVOICE_TYPE;<br><br>                            &#125;<br>                            hxInvoiceVo.setInvoiceType(invoiceType);<br>                            hxInvoiceVo.setPaymentIds(Collections.singletonList(payment.getPaymentId()));<br>                            hxInvoiceVo.setUserNumber(payment.getUserNumber());<br>                            hxInvoiceVo.setMeterReaderName(payment.getMeterReaderName());<br>                            <span class="hljs-comment">//添加处理之后的缴费订单</span><br>                            hxInvoiceVo.setPayment(payment);<br>                            <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> invoiceService.HXInvoiceProduct(hxInvoiceVo,userId);<br>                            <span class="hljs-comment">//json对象</span><br>                            <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> JSONObject.parseObject(o.toString());<br>                            <span class="hljs-type">String</span> <span class="hljs-variable">fphm</span> <span class="hljs-operator">=</span> StringUtils.isNotBlank(jsonObject.getString(<span class="hljs-string">&quot;Fphm&quot;</span>)) ? jsonObject.getString(<span class="hljs-string">&quot;Fphm&quot;</span>) : jsonObject.getString(<span class="hljs-string">&quot;fphm&quot;</span>);<br>                            <span class="hljs-type">String</span> <span class="hljs-variable">kprq</span> <span class="hljs-operator">=</span> StringUtils.isNotBlank(jsonObject.getString(<span class="hljs-string">&quot;Kprq&quot;</span>)) ? jsonObject.getString(<span class="hljs-string">&quot;Kprq&quot;</span>) : jsonObject.getString(<span class="hljs-string">&quot;kprq&quot;</span>);<br>                            payment.setInvoiceUrl(o.toString());<br>                            <span class="hljs-comment">//更新时间为发票时间</span><br>                            <span class="hljs-type">DateTime</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> DateUtil.date();<br>                            payment.setUpdateTime(date);<br>                            payment.setOpenInvoiceTime(StringUtils.isNotBlank(kprq) ? DateUtils.parseDate(kprq) : date);<br>                            payment.setConfirmTime(date);<br>                            baseMapper.updateById(payment);<br><br><br>                            invoiceService.addInvoiceInfo(payment, CommonConstants.AUDIT_STATUS_1a, fphm, kprq,userId,invoiceType);<br><br>                            log.info(<span class="hljs-string">&quot;当前订单=》&#123;&#125;《=处理结束，发票编号：-----------------------------------&#123;&#125;&quot;</span>,payment.getPaymentId(),fphm);<br>                        &#125;<br>                );<br>            &#125;<br>            <span class="hljs-comment">//获取线程 获取异常值</span><br>            <span class="hljs-keyword">if</span>(Objects.nonNull(future))&#123;<br>                future.get();<br>            &#125;<br>            <span class="hljs-comment">//下载发票</span><br>            invoiceService.seleceHxFp();<br>        &#125;<span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>            log.error(<span class="hljs-string">&quot;线程异常：--------------------------------------&quot;</span> + e);<br>            Thread.currentThread().interrupt();<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            log.error(<span class="hljs-string">&quot;确认失败，失败原因：--------------------------------------&quot;</span> + e);<br>            <span class="hljs-keyword">return</span> R.failed(<span class="hljs-string">&quot;确认失败，失败原因：&quot;</span> + e);<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            running.shutdown();<br>        &#125;<br>        <span class="hljs-keyword">return</span> R.ok();<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="3、案例二"><a href="#3、案例二" class="headerlink" title="3、案例二"></a>3、案例二</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.chalk.admin.job;<br><br><br><span class="hljs-keyword">import</span> cn.hutool.core.date.DateUtil;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Wrappers;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br><span class="hljs-keyword">import</span> com.chalk.admin.api.entity.DeviceMeterReading;<br><span class="hljs-keyword">import</span> com.chalk.admin.api.entity.MeterReading;<br><span class="hljs-keyword">import</span> com.chalk.admin.api.entity.WaterUserRecord;<br><span class="hljs-keyword">import</span> com.chalk.admin.api.vo.SendWaterUserVO;<br><span class="hljs-keyword">import</span> com.chalk.admin.mapper.DeviceMeterReadingMapper;<br><span class="hljs-keyword">import</span> com.chalk.admin.mapper.MeterReadingMapper;<br><span class="hljs-keyword">import</span> com.chalk.admin.mapper.WaterMeterInfoMapper;<br><span class="hljs-keyword">import</span> com.chalk.admin.mapper.WaterUserRecordMapper;<br><span class="hljs-keyword">import</span> com.chalk.admin.service.SendWaterUserDataService;<br><span class="hljs-keyword">import</span> com.chalk.common.core.constant.CommonConstants;<br><span class="hljs-keyword">import</span> com.chalk.common.core.utils.StringUtils;<br><span class="hljs-keyword">import</span> com.chalk.common.core.utils.ThreadPoolUtil;<br><span class="hljs-keyword">import</span> com.chalk.common.core.utils.poi.ExcelUtil;<br><span class="hljs-keyword">import</span> lombok.RequiredArgsConstructor;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.apache.commons.lang3.math.NumberUtils;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><span class="hljs-keyword">import</span> java.time.ZoneId;<br><span class="hljs-keyword">import</span> java.time.format.DateTimeFormatter;<br><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.util.concurrent.Future;<br><span class="hljs-keyword">import</span> java.util.concurrent.ThreadPoolExecutor;<br><span class="hljs-keyword">import</span> java.util.stream.Collectors;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 营收系统需开发接口进行数据传输</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lx</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2023-10-20 9:42:14</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@RequiredArgsConstructor</span><br><span class="hljs-comment">//@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SendWaterUserDataScheduler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">SendWaterUserDataService</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 线程池数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">THREAD_COUNT</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 核心线程数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">CORE_POOL_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">4</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 数据大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">PAGE_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">300</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 循环次数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">OPEN_THREAD_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br><br><br>    <span class="hljs-comment">/** 水户档案 */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> WaterUserRecordMapper waterUserRecordMapper;<br><br>    <span class="hljs-comment">/** 水表信息 */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> WaterMeterInfoMapper waterMeterInfoMapper;<br><br>    <span class="hljs-comment">/** 人工抄表信息 */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> MeterReadingMapper meterReadingMapper;<br><br>    <span class="hljs-comment">/** 远程抄表信息 */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> DeviceMeterReadingMapper deviceMeterReadingMapper;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询推送数据</span><br><span class="hljs-comment">     */</span><br><span class="hljs-comment">//    @Scheduled(cron = &quot;0 */1 * * * ?&quot;)</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;SendWaterUserVO&gt; <span class="hljs-title function_">findWaterUserData</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">//处理数据结果集</span><br>        List&lt;SendWaterUserVO&gt; sendWaterUserVOS = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-comment">//查询当前水户数据大小</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">countSize</span> <span class="hljs-operator">=</span> waterUserRecordMapper.selectCount(Wrappers.&lt;WaterUserRecord&gt;lambdaQuery()<br>                .eq(WaterUserRecord::getAccountStatus,NumberUtils.INTEGER_ZERO)<br>                .eq(WaterUserRecord::getAuditStatus, NumberUtils.INTEGER_ONE)<br>                .eq(WaterUserRecord::getIsDeleted, NumberUtils.INTEGER_ZERO));<br><br>        <span class="hljs-keyword">if</span>(NumberUtils.INTEGER_ZERO.equals(countSize))&#123;<br>            log.info(<span class="hljs-string">&quot;暂未待处理数据....................&quot;</span>);<br>            <span class="hljs-keyword">return</span> sendWaterUserVOS;<br>        &#125;<br><br>        log.info(<span class="hljs-string">&quot;大数据平台对接-营收系统数据传输开始处理：--------------------------------------&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (countSize &lt;= OPEN_THREAD_SIZE) &#123;<br>            <span class="hljs-comment">//如果小于1000条直接处理</span><br>            disposeData(NumberUtils.INTEGER_ZERO, NumberUtils.INTEGER_ONE,sendWaterUserVOS);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//设置线程池</span><br>            <span class="hljs-type">ThreadPoolExecutor</span> <span class="hljs-variable">running</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadPoolUtil</span>().runPool();<br>            <span class="hljs-comment">//计算分页总页数</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">pageTotalNumber</span> <span class="hljs-operator">=</span> NumberUtils.INTEGER_ZERO.equals(countSize % PAGE_SIZE) ? countSize / PAGE_SIZE : countSize / PAGE_SIZE + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">try</span>&#123;<br>                <span class="hljs-comment">//Excel结果集</span><br>                ExcelUtil&lt;SendWaterUserVO&gt; excelUtil = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ExcelUtil</span>&lt;&gt;(SendWaterUserVO.class);<br>                Future&lt;?&gt; future = <span class="hljs-literal">null</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= pageTotalNumber; i++)&#123;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">finalI</span> <span class="hljs-operator">=</span> i;<br>                    <span class="hljs-comment">//开启线程</span><br>                    running.submit(<br>                            () -&gt; &#123;<br>                                <span class="hljs-comment">//处理数据</span><br>                                disposeData(pageTotalNumber,finalI,sendWaterUserVOS);<br>                            &#125;<br>                    );<br>                &#125;<br>                <span class="hljs-comment">//处理结束 则将数据处理回归至已推送-结束正常状态</span><br>                log.info(<span class="hljs-string">&quot;数据处理结束 已推送-结束正常状态-----------------------------------&quot;</span>);<br>                waterUserRecordMapper.update(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WaterUserRecord</span>(),Wrappers.&lt;WaterUserRecord&gt;lambdaUpdate()<br>                        .set(WaterUserRecord::getIsInsertAlter,NumberUtils.INTEGER_ZERO)<br>                        .eq(WaterUserRecord::getIsDeleted,NumberUtils.INTEGER_ZERO));<br>            &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>                log.error(<span class="hljs-string">&quot;线程处理异常---------------------------：&quot;</span>,e);<br>            &#125;<span class="hljs-keyword">finally</span> &#123;<br>                <span class="hljs-comment">//关闭线程池</span><br>                running.shutdown();<br>            &#125;<br><br>            log.info(<span class="hljs-string">&quot;大数据平台对接-营收系统数据传输处理结束：--------------------------------------&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> sendWaterUserVOS;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 处理数据至大数据平台</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pageTotalNumber 分页总页码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pageNumber 当前页码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sendWaterUserVOS 处理数据结果集</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">disposeData</span><span class="hljs-params">(<span class="hljs-type">int</span> pageTotalNumber,<span class="hljs-type">int</span> pageNumber,List&lt;SendWaterUserVO&gt; sendWaterUserVOS)</span>&#123;<br>        <span class="hljs-comment">//查询水户基本信息</span><br>        List&lt;WaterUserRecord&gt; waterUserRecords = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-keyword">if</span>(NumberUtils.INTEGER_ZERO.equals(pageTotalNumber))&#123;<br>            <span class="hljs-comment">//数据小于1000条  查询全部处理</span><br>            waterUserRecords = waterUserRecordMapper.selectList(Wrappers.&lt;WaterUserRecord&gt;lambdaQuery()<br>                    .eq(WaterUserRecord::getIsDeleted, NumberUtils.INTEGER_ZERO)<br>                    .eq(WaterUserRecord::getAccountStatus,NumberUtils.INTEGER_ZERO)<br>                    .eq(WaterUserRecord::getAuditStatus, NumberUtils.INTEGER_ONE));<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-comment">//分页查询水户数据</span><br>            <span class="hljs-type">Page</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>();<br>            page.setCurrent(pageNumber);<br>            <span class="hljs-comment">//每页处理300条</span><br>            page.setSize(PAGE_SIZE);<br>            <span class="hljs-comment">//查询入参</span><br>            <span class="hljs-type">WaterUserRecord</span> <span class="hljs-variable">waterUserRecord</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WaterUserRecord</span>();<br>            <span class="hljs-comment">//过滤未删除</span><br>            waterUserRecord.setIsDeleted(NumberUtils.INTEGER_ZERO);<br>            <span class="hljs-comment">//过滤待审核数据</span><br>            waterUserRecord.setAuditStatus(NumberUtils.INTEGER_ONE);<br>            Page&lt;WaterUserRecord&gt; waterUserRecordPage = waterUserRecordMapper.selectPage(<br>                    page, Wrappers.&lt;WaterUserRecord&gt;query(waterUserRecord)<br>            );<br>            <span class="hljs-comment">//获取list数据</span><br>            waterUserRecords = waterUserRecordPage.getRecords();<br>        &#125;<br>        <span class="hljs-comment">/** 开始处理数据 */</span><br>        <span class="hljs-comment">//获取当前时间</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> LocalDateTime.now().format(DateTimeFormatter.ofPattern(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));<br>        <span class="hljs-comment">//根据用户编号查询当月人工抄表信息</span><br>        List&lt;MeterReading&gt; meterReadings =  meterReadingMapper.findMeterReading(waterUserRecords.stream().<br>                map(u -&gt; StringUtils.isNotBlank(u.getUserNumber()) ? u.getUserNumber() : <span class="hljs-string">&quot;&quot;</span>)<br>                .collect(Collectors.toList()),date);<br><br>        <span class="hljs-comment">//根据水户档案ID查询当月远程抄表信息</span><br>        List&lt;DeviceMeterReading&gt; deviceMeterReadings = deviceMeterReadingMapper.findDeviceMeterReading(waterUserRecords.stream()<br>                        .map(u -&gt; StringUtils.isNotBlank(u.getWaterUserRecordId()) ? u.getWaterUserRecordId() : <span class="hljs-string">&quot;&quot;</span>)<br>                        .collect(Collectors.toList()),date);<br><br>        <span class="hljs-comment">//人工抄表信息转map</span><br>        Map&lt;String, MeterReading&gt; meterReadingMap = meterReadings.stream().filter(m -&gt; StringUtils.isNotBlank(m.getUserNumber())).collect(Collectors.toMap(MeterReading::getUserNumber, item -&gt; item));<br><br>        <span class="hljs-comment">//远程抄表信息转map</span><br>        Map&lt;String, DeviceMeterReading&gt; deviceMeterReadingMap = deviceMeterReadings.stream().filter(d -&gt; StringUtils.isNotBlank(d.getWaterUserRecordId())).collect(Collectors.toMap(DeviceMeterReading::getWaterUserRecordId, item -&gt; item));<br><br>        waterUserRecords.forEach(w -&gt; &#123;<br>            <span class="hljs-comment">//数据处理最终结果集</span><br>            <span class="hljs-type">SendWaterUserVO</span> <span class="hljs-variable">sendWaterUserVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendWaterUserVO</span>();<br>            <span class="hljs-comment">//获取用户编号</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">userNumber</span> <span class="hljs-operator">=</span> w.getUserNumber();<br>            <span class="hljs-comment">//获取人工抄表信息</span><br>            <span class="hljs-type">MeterReading</span> <span class="hljs-variable">meterReading</span> <span class="hljs-operator">=</span> meterReadingMap.get(userNumber);<br>            <span class="hljs-comment">//获取远程抄表信息</span><br>            <span class="hljs-type">DeviceMeterReading</span> <span class="hljs-variable">deviceMeterReading</span> <span class="hljs-operator">=</span> deviceMeterReadingMap.get(w.getWaterUserRecordId());<br><br>            <span class="hljs-keyword">if</span>(Objects.nonNull(meterReading))&#123;<br>                log.info(<span class="hljs-string">&quot;进入人工抄表---------------------------------------------------------------&quot;</span>);<br>                <span class="hljs-comment">//抄表水量</span><br>                sendWaterUserVO.setDosage(Objects.nonNull(meterReading.getDosage()) ? meterReading.getDosage() : BigDecimal.ZERO);<br>                <span class="hljs-comment">//获取抄表月份</span><br>                <span class="hljs-type">Date</span> <span class="hljs-variable">readTableTime</span> <span class="hljs-operator">=</span> Objects.nonNull(meterReading.getReadTableTime()) ? meterReading.getReadTableTime() : DateUtil.date() ;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">monthValue</span> <span class="hljs-operator">=</span> readTableTime.toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();<br>                sendWaterUserVO.setMeterReadingMonth(monthValue + <span class="hljs-string">&quot;月&quot;</span>);<br>                <span class="hljs-comment">//人工抄表没有远程表</span><br>                sendWaterUserVO.setIsIot(NumberUtils.INTEGER_ZERO);<br><br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(Objects.nonNull(deviceMeterReading))&#123;<br>                log.info(<span class="hljs-string">&quot;进入远程表---------------------------------------------------------------&quot;</span>);<br>                <span class="hljs-comment">//抄表水量</span><br>                <span class="hljs-type">BigDecimal</span> <span class="hljs-variable">dosage</span> <span class="hljs-operator">=</span> deviceMeterReading.getDosage();<br>                sendWaterUserVO.setDosage(Objects.nonNull(dosage) ? dosage : BigDecimal.ZERO);<br>                <span class="hljs-comment">//获取抄表月份</span><br>                <span class="hljs-type">Date</span> <span class="hljs-variable">readTableTime</span> <span class="hljs-operator">=</span> Objects.nonNull(deviceMeterReading.getReadTableTime()) ? deviceMeterReading.getReadTableTime() : DateUtil.date() ;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">monthValue</span> <span class="hljs-operator">=</span> readTableTime.toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();<br>                sendWaterUserVO.setMeterReadingMonth(monthValue + <span class="hljs-string">&quot;月&quot;</span>);<br>                <span class="hljs-comment">//远程表</span><br>                sendWaterUserVO.setIsIot(NumberUtils.INTEGER_ONE);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                sendWaterUserVO.setDosage(BigDecimal.ZERO);<br>                <span class="hljs-type">int</span> <span class="hljs-variable">monthValue</span> <span class="hljs-operator">=</span> DateUtil.date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();<br>                sendWaterUserVO.setMeterReadingMonth(monthValue + <span class="hljs-string">&quot;月&quot;</span>);<br>                sendWaterUserVO.setIsIot(NumberUtils.INTEGER_ZERO);<br>            &#125;<br>            <span class="hljs-comment">//用户编号</span><br>            sendWaterUserVO.setUserNumber(userNumber);<br>            <span class="hljs-comment">//用户地址</span><br>            sendWaterUserVO.setDetailedAddress(w.getDetailedAddress());<br>            <span class="hljs-comment">//是否新增用户 0否1是</span><br>            <span class="hljs-keyword">if</span>(NumberUtils.INTEGER_ONE.equals(w.getIsInsertAlter()))&#123;<br>                <span class="hljs-comment">//如果等于1 则是新增</span><br>                sendWaterUserVO.setIsInsert(NumberUtils.INTEGER_ONE);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                sendWaterUserVO.setIsInsert(NumberUtils.INTEGER_ZERO);<br>            &#125;<br><br>            <span class="hljs-comment">//信息是否变更  0否1是</span><br>            <span class="hljs-keyword">if</span>(CommonConstants.AUDIT_REBUT_STAT.equals(w.getIsInsertAlter()))&#123;<br>                <span class="hljs-comment">//2 则是信息变更</span><br>                sendWaterUserVO.setIsAlter(NumberUtils.INTEGER_ONE);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                sendWaterUserVO.setIsAlter(NumberUtils.INTEGER_ZERO);<br>            &#125;<br><br>            sendWaterUserVOS.add(sendWaterUserVO);<br><br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>emqx Linux安装指南</title>
    <link href="/emqx%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    <url>/emqx%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h3 id="一、EMQX官方文档"><a href="#一、EMQX官方文档" class="headerlink" title="一、EMQX官方文档"></a><strong>一、EMQX官方文档</strong></h3><p><a href="https://www.emqx.io/docs/zh/v4.3/advanced/relup.html">https://www.emqx.io/docs/zh/v4.3/advanced/relup.html</a></p><h3 id="二、安装步骤"><a href="#二、安装步骤" class="headerlink" title="二、安装步骤"></a><strong>二、安装步骤</strong></h3><h4 id="1、EMQX-RPM包-下载地址"><a href="#1、EMQX-RPM包-下载地址" class="headerlink" title="1、EMQX-RPM包-下载地址"></a><strong>1、EMQX-RPM包-下载地址</strong></h4><p> <a href="https://www.emqx.io/cn/downloads">https://www.emqx.io/cn/downloads</a> </p><h5 id="1-1、EMQX下载版本注意事项"><a href="#1-1、EMQX下载版本注意事项" class="headerlink" title="1.1、EMQX下载版本注意事项"></a>1.1、EMQX下载版本注意事项</h5><p>​两个版本机制：4.0以上和4.0以下，下载4.0以上，4.0一下版本老化以及配置参数低，且用户账号和密码后期维护复杂</p><p>​版本参照：emqx-centos7-v4.0.7.x86_64</p><h4 id="2、安装指令"><a href="#2、安装指令" class="headerlink" title="2、安装指令"></a>2、安装指令</h4><p> rpm -ivh  rpm安装包</p><h4 id="3、EMQX启动和停止"><a href="#3、EMQX启动和停止" class="headerlink" title="3、EMQX启动和停止"></a>3、EMQX启动和停止</h4><p>启动： systemctl start emqx  或者  systemctl enable emqx </p><p>停止：systemctl stop emqx</p><h4 id="4、EMQX查看启动成功状态"><a href="#4、EMQX查看启动成功状态" class="headerlink" title="4、EMQX查看启动成功状态"></a>4、EMQX查看启动成功状态</h4><p>命令：emqx_ctl status</p><p>成功则显示下面两段：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Node &#x27;emqx@127.0.0.1&#x27; is started<br>emqx 4.0.7 is running<br></code></pre></td></tr></table></figure><h4 id="5、安装成功之后的路径"><a href="#5、安装成功之后的路径" class="headerlink" title="5、安装成功之后的路径"></a>5、安装成功之后的路径</h4><p>路径：&#x2F;etc&#x2F;emqx</p><p>路径内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">acl.conf  certs  emqx.conf  lwm2m_xml  plugins  psk.txt  ssl_dist.conf  vm.args<br></code></pre></td></tr></table></figure><p>主要路径解释：</p><p>acl.conf：添加系统主题配置文件即携带 <strong>sys</strong> 主题则为系统主题</p><p>emqx.conf：emqx配置文件，设置消息是否保留以及开启用户密码连接</p><p>plugins：emqx各类插件文件包括身份权限验证</p><h3 id="三、EMQX安装成功之后优化及配置"><a href="#三、EMQX安装成功之后优化及配置" class="headerlink" title="三、EMQX安装成功之后优化及配置"></a><strong>三、EMQX安装成功之后优化及配置</strong></h3><h4 id="1、系统主题配置-acl-conf"><a href="#1、系统主题配置-acl-conf" class="headerlink" title="1、系统主题配置-(acl.conf)"></a>1、系统主题配置-(acl.conf)</h4><p>举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&#123;allow, all  subscribe, [&quot;$SYS/brokers/+/clients/#&quot;]&#125;.<br></code></pre></td></tr></table></figure><h4 id="2、关闭保留消息及关闭匿名-账号和密码-登录-emqx-conf"><a href="#2、关闭保留消息及关闭匿名-账号和密码-登录-emqx-conf" class="headerlink" title="2、关闭保留消息及关闭匿名(账号和密码)登录-(emqx.conf)"></a>2、关闭保留消息及关闭匿名(账号和密码)登录-(emqx.conf)</h4><p>关闭保留消息：<strong>mqtt.retain_available &#x3D; true 改为false</strong></p><p>注意：如果为true 则如果mq有未及时处理的消息或者重复消息，下次连接就会再次发送出来</p><p>允许匿名：<strong>allow_anonymous &#x3D; true  改为false</strong> </p><p>注意：改为false不允许匿名，必须使用账号和密码连接</p><h3 id="四、创建用户和密码连接"><a href="#四、创建用户和密码连接" class="headerlink" title="四、创建用户和密码连接"></a><strong>四、创建用户和密码连接</strong></h3><h4 id="1、plugins目录找到emqx-auth-username-conf设置用户和密码"><a href="#1、plugins目录找到emqx-auth-username-conf设置用户和密码" class="headerlink" title="1、plugins目录找到emqx_auth_username.conf设置用户和密码"></a>1、plugins目录找到emqx_auth_username.conf设置用户和密码</h4><p>命令：cd &#x2F;etc&#x2F;emqx&#x2F;plugins&#x2F;     然后：vim  emqx_auth_username.conf</p><p>或者：vim &#x2F;etc&#x2F;emqx&#x2F;plugins&#x2F;emqx_auth_username.conf</p><h4 id="2、设置账号和密码-可以是单个，可以是多个"><a href="#2、设置账号和密码-可以是单个，可以是多个" class="headerlink" title="2、设置账号和密码(可以是单个，可以是多个)"></a><strong>2、设置账号和密码(可以是单个，可以是多个)</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 第一组认证数据</span></span><br><br>auth.user.1.username = 账号(自定义)<br>auth.user.1.password = 密码(自定义)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 第二组认证数据</span></span><br><br>auth.user.2.username = 账号(自定义)<br>auth.user.2.password = 密码(自定义)<br></code></pre></td></tr></table></figure><h4 id="3、命令方式添加用户和密码以及删除用户"><a href="#3、命令方式添加用户和密码以及删除用户" class="headerlink" title="3、命令方式添加用户和密码以及删除用户"></a><strong>3、命令方式添加用户和密码以及删除用户</strong></h4><h5 id="3-1、添加用户"><a href="#3-1、添加用户" class="headerlink" title="3.1、添加用户"></a>3.1、添加用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">users add &lt;Username&gt; &lt;Password&gt; <br></code></pre></td></tr></table></figure><h5 id="3-2、更新用户"><a href="#3-2、更新用户" class="headerlink" title="3.2、更新用户"></a>3.2、更新用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">users update &lt;Username&gt; &lt;NewPassword&gt; <br></code></pre></td></tr></table></figure><h5 id="3-3、删除用户"><a href="#3-3、删除用户" class="headerlink" title="3.3、删除用户"></a>3.3、删除用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">users del &lt;Username&gt;<br></code></pre></td></tr></table></figure><h4 id="4、查看EMQX所有命令以及查看当前设置的用户"><a href="#4、查看EMQX所有命令以及查看当前设置的用户" class="headerlink" title="4、查看EMQX所有命令以及查看当前设置的用户"></a><strong>4、查看EMQX所有命令以及查看当前设置的用户</strong></h4><p>查看EMQX所有命令：emqx_ctl list</p><p>查看当前设置的用户：emqx_ctl users list</p><h3 id="五、打开EMQX后台管理"><a href="#五、打开EMQX后台管理" class="headerlink" title="五、打开EMQX后台管理"></a><strong>五、打开EMQX后台管理</strong></h3><h4 id="1、-登录地址及默认账号和密码"><a href="#1、-登录地址及默认账号和密码" class="headerlink" title="1、 登录地址及默认账号和密码"></a><strong>1、 登录地址及默认账号和密码</strong></h4><p>网址：ip :18083 </p><p>默认登录账号和密码： 用户名 admin  密码public </p><h4 id="2-、设置中文"><a href="#2-、设置中文" class="headerlink" title="2 、设置中文"></a><strong>2 、设置中文</strong></h4><p>在<strong>ADMIN</strong>模块下的<strong>Settings</strong>中切换中文显示</p><h3 id="六、设置完账号和密码连接注意事项"><a href="#六、设置完账号和密码连接注意事项" class="headerlink" title="六、设置完账号和密码连接注意事项"></a><strong>六、设置完账号和密码连接注意事项</strong></h3><p><strong>注意：打开后台管理在管理模块下的插件中开启emqx_auth_username 否则设置的用户名和密码不起作用</strong></p><h3 id="七、订阅主题以及测试"><a href="#七、订阅主题以及测试" class="headerlink" title="七、订阅主题以及测试"></a><strong>七、订阅主题以及测试</strong></h3>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Java服务linux启动以及idea需要安装的插件</title>
    <link href="/Java%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%BB%A5%E5%8F%8Aidea%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
    <url>/Java%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%BB%A5%E5%8F%8Aidea%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="一、Linux后台启动命令"><a href="#一、Linux后台启动命令" class="headerlink" title="一、Linux后台启动命令"></a>一、Linux后台启动命令</h3><p>说明：jvm参数可根据实际情况调整，不一定128m , 项目jar包根据实际情况更换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup java -jar -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC xxxx.jar &amp;<br></code></pre></td></tr></table></figure><h3 id="二、jar包按天分日志启动命令"><a href="#二、jar包按天分日志启动命令" class="headerlink" title="二、jar包按天分日志启动命令"></a>二、jar包按天分日志启动命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup java -jar -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC  chalk-family-wxapp-2.0.0.jar &gt;&gt; nohup`date +%Y-%m-%d`.out 2 &gt; &amp;1 &amp;<br></code></pre></td></tr></table></figure><h3 id="三、查询Java进程以及杀死进程"><a href="#三、查询Java进程以及杀死进程" class="headerlink" title="三、查询Java进程以及杀死进程"></a>三、查询Java进程以及杀死进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef | grep java<br><br>kill -9 xx进程号<br></code></pre></td></tr></table></figure><h3 id="四、idea必安装插件-旧版idea"><a href="#四、idea必安装插件-旧版idea" class="headerlink" title="四、idea必安装插件(旧版idea)"></a>四、idea必安装插件(旧版idea)</h3><p>Lombok：（get set方法使用）</p><p>MybatisCodeHelperPro(MarketPlace Edition)：数据库使用</p><p>Easy Code：导入数据库实体类使用</p><p>idea设置git-commit 左侧显示：打开 Settings -&gt; Version Control -&gt; Commit -&gt; Use non-modal commit interface 勾选</p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>【demo】演示</title>
    <link href="/%E3%80%90demo%E3%80%91%E6%BC%94%E7%A4%BA/"/>
    <url>/%E3%80%90demo%E3%80%91%E6%BC%94%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<!--以上为 hexo 声明信息：title: 标题date: 时间categories: 分类excerpt: 摘要信息更多配置查看hexo文档：https://hexo.io/zh-cn/docs/--><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
